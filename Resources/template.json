{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectPrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for all resources created for the project (except storage account, see below). Should be in the format dfc-env-proj"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the project storage account (as it follows a different naming convention)"
      }
    },
    "postcodeApiUrl": {
      "type": "string",
      "metadata": {
        "description": "API URL for the postcode search"
      }
    },
    "postcodeApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "API host key (code) needed to access the postcode search"
      }
    },
    "venueApiUrl": {
      "type": "string",
      "metadata": {
        "description": "API URL for the venue search"
      }
    },
    "venueApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "API host key (code) needed to access the function app (REST API)"
      }
    },
    "larsApiUrl": {
      "type": "string",
      "metadata": {
        "description": "API URL for the provider search"
      }
    },
    "larsApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "API URL for the provider search"
      }
    },
    "providerApiUrl": {
      "type": "string",
      "metadata": {
        "description": "API URL for the provider services"
      }
    },
    "providerApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "API host key (code) needed to access the provider seach function app (REST API)"
      }
    },
    "courseApiUrl": {
      "type": "string",
      "metadata": {
        "description": "API URL for the course services"
      }
    },
    "courseApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "API host key (code) needed to access the course service function app (REST API)"
      }
    },
    "searchDomain": {
      "type": "string",
      "metadata": {
        "description": "URL for the search services"
      }
    },
    "searchAdminKey": {
      "type": "securestring",
      "metadata": {
        "description": "Admin key for updating seach (REST API)"
      }
    },
    "searchQueryKey": {
      "type": "securestring",
      "metadata": {
        "description": "Query key for reading seach (REST API)"
      }
    },
    "dfeClientID": {
      "type": "string",
      "metadata": {
        "description": "DfE Signin client ID"
      }
    },
    "dfeClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "DfE Signin client secret (key)"
      }
    },
    "dfeEndpointUrl": {
      "type": "string",
      "metadata": {
        "description": "DfE Signin URL"
      }
    },
    "dfeMetadataUrl": {
      "type": "string",
      "metadata": {
        "description": "DfE Signin metadata URL"
      }
    },
    "dfeCallBackPath": {
      "type": "string",
      "metadata": {
        "description": "Path in URL that DfE Signin calls back after authentication"
      }
    },
    "dfeSignedOutPath": {
      "type": "string",
      "metadata": {
        "description": "Path in URL that DfE Signin calls back after sign out"
      }
    },
    "appServicePlanSize": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
          "description": "Size of the instances in the app service plan"
      },
      "allowedValues": [
        "1",
        "2",
        "3"
      ]
    },
    "appServicePlanInstances": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
          "description": "Number of instances in the app service plan"
      }
    },
    "appHostName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Custom host name for the website"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Key vault with the certificate in - only used if appHostName is specified"
      }
    },
    "keyVaultResourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource group for the key vault - only used if appHostName is specified"
      }
    },
    "certificateName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
          "description": "Name of the secret (certificate) as it appears in key vault - only used if appHostName is specified"
      }
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/ArmTemplates/",
    "appInsightsName": "[concat(parameters('projectPrefix'),'-ai')]",
    "appServiceName": "[concat(parameters('projectPrefix'),'-as')]",
    "appServicePlanName": "[concat(parameters('projectPrefix'),'-asp')]",
    "cosmosDbSQLName": "[concat(parameters('projectPrefix'),'-cdb')]",
    "azureSearchName": "[concat(parameters('projectPrefix'),'-sch')]"
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "courseDirectoryAppInsights",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('appInsightsName')]"
          },
          "attachedService": {
            "value": "[variables('appServiceName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "courseDirectoryStorage",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'storage-account.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "courseDirectoryAppServicePlan",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "aspSize": {
            "value": "[parameters('appServicePlanSize')]"
          },
          "aspInstances": {
            "value": "[parameters('appServicePlanInstances')]"
          }
        }
      }
    },
    {
      "name": "courseDirectoryCertificates",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "condition": "[greater(length(parameters('appHostName')),0)]",
      "dependsOn": [
        "courseDirectoryAppServicePlan"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultCertificateName": {
            "value": "[parameters('certificateName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('keyVaultResourceGroup')]"
          },
          "serverFarmId": {
            "value": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "courseDirectoryAppService",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "courseDirectoryCertificates",
        "courseDirectoryAppInsights",
        "courseDirectoryStorage",
        "courseDirectoryAppServicePlan"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('appServiceName')]"
          },
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[resourcegroup().name]"
          },
          "customHostName": {
            "value": "[parameters('appHostName')]"
          },
          "certificateThumbprint": {
            "value": "[if(greater(length(parameters('appHostName')),0), reference('courseDirectoryCertificates').outputs.certificateThumbprint.value, '')]"
          },
          "deployStagingSlot": {
            "value": true
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference('courseDirectoryAppInsights').outputs.InstrumentationKey.value]"
              },
              {
                "name": "GovukPhaseBannerSettings__IsVisible",
                "value": true
              },
              {
                "name": "GovukPhaseBannerSettings__Tag",
                "value": "alpha"
              },
              {
                "name": "GovukPhaseBannerSettings__LinkUrl",
                "value": "#"
              },
              {
                "name": "GovukPhaseBannerSettings__LinkText",
                "value": "feedback"
              },
              {
                "name": "LarsSearchSettings__ApiUrl",
                "value": "[parameters('larsApiUrl')]"
              },
              {
                "name": "LarsSearchSettings__ApiKey",
                "value": "[parameters('larsApiKey')]"
              },
              {
                "name": "LarsSearchSettings__ApiVersion",
                "value": "2017-11-11"
              },
              {
                "name": "LarsSearchSettings__Indexes",
                "value": "azuresql-index"
              },
              {
                "name": "LarsSearchSettings__ItemsPerPage",
                "value": 10
              },
              {
                "name": "LarsSearchSettings__PageParamName",
                "value": "PageNo"
              },
              {
                "name": "PostCodeSearchSettings__FindAddressesBaseUrl",
                "value": "http://services.postcodeanywhere.co.uk/CapturePlus/Interactive/Find/2.1/json.ws?"
              },
              {
                "name": "PostCodeSearchSettings__RetrieveAddressBaseUrl",
                "value": "[parameters('postcodeApiUrl')]"
              },
              {
                "name": "PostCodeSearchSettings__Key",
                "value": "[parameters('postcodeApiKey')]"
              },
              {
                "name": "VenueServiceSettings__ApiUrl",
                "value": "[parameters('venueApiUrl')]"
              },
              {
                "name": "VenueServiceSettings__ApiKey",
                "value": "[parameters('venueApiKey')]"
              },
              {
                "name": "VenueServiceSettings__ApiVersion",
                "value": ""
              },
              {
                "name": "ProviderServiceSettings__ApiUrl",
                "value": "[parameters('providerApiUrl')]"
              },
              {
                "name": "ProviderServiceSettings__ApiKey",
                "value": "[parameters('providerApiKey')]"
              },
              {
                "name": "CourseServiceSettings__ApiUrl",
                "value": "[parameters('courseApiUrl')]"
              },
              {
                "name": "CourseServiceSettings__ApiKey",
                "value": "[parameters('courseApiKey')]"
              },
              {
                "name": "AppUISettings__VenueNameComponentSettings__VenueName_Label",
                "value": "Venue name"
              },
              {
                "name": "AppUISettings__CourseForComponentSettings__TextFieldMaxChars",
                "value": "500"
              },
              {
                "name": "AppUISettings__EntryRequirementsComponentSettings__TextFieldMaxChars",
                "value": "500"
              },
              {
                "name": "AppUISettings__WhatWillLearnComponentSettings__TextFieldMaxChars",
                "value": "500"
              },
              {
                "name": "AppUISettings__HowYouWillLearnComponentSettings__TextFieldMaxChars",
                "value": "500"
              },
              {
                "name": "AppUISettings__WhatYouNeedComponentSettings__TextFieldMaxChars",
                "value": "500"
              },
              {
                "name": "AppUISettings__HowAssessedComponentSettings__TextFieldMaxChars",
                "value": "500"
              },
              {
                "name": "AppUISettings__WhereNextComponentSettings__TextFieldMaxChars",
                "value": "500"
              },
              {
                "name": "OnspdSearchSettings__SearchServiceName",
                "value": "[parameters('searchDomain')]"
              },
              {
                "name": "OnspdSearchSettings__SearchServiceAdminApiKey",
                "value": "[parameters('searchAdminKey')]"
              },
              {
                "name": "OnspdSearchSettings__SearchServiceQueryApiKey",
                "value": "[parameters('searchQueryKey')]"
              },
              {
                "name": "OnspdSearchSettings__IndexName",
                "value": "onspd"
              },
              {
                "name": "DFESignInSettings__ClientID",
                "value": "[parameters('dfeClientID')]"
              },
              {
                "name": "DFESignInSettings__ClientSecret",
                "value": "[parameters('dfeClientSecret')]"
              },
              {
                "name": "DFESignInSettings__TokenEndpoint",
                "value": "[parameters('dfeEndpointUrl')]"
              },
              {
                "name": "DFESignInSettings__MetadataAddress",
                "value": "[parameters('dfeMetadataUrl')]"
              },
              {
                "name": "DFESignInSettings__CallbackPath",
                "value": "[parameters('dfeCallBackPath')]"
              },
              {
                "name": "DFESignInSettings__SignedOutCallbackPath",
                "value": "[parameters('dfeSignedOutPath')]"
              }
            ]
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "providerPortalCosmosSQL",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'cosmos-db.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "cosmosDbName": {
            "value": "[variables('cosmosDbSQLName')]"
          },
          "cosmosApiType": {
            "value": "SQL"
          },
          "defaultConsistencyLevel": {
            "value": "Eventual"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "providerPortalSearch",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'azure-search.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "azureSearchName": {
            "value": "[variables('azureSearchName')]"
          },
          "azureSearchSku": {
            "value": "standard"
          }
        }
      }
    }
  ],
  "outputs": {
    "storageConnectionString": {
      "type": "string",
      "value": "[reference('courseDirectoryStorage').outputs.storageConnectionString.value]"
    },
    "appServicePlanName": {
      "type": "string",
      "value": "[variables('appServicePlanName')]"
    },
    "appInsightInstrumentationKey": {
      "type": "string",
      "value": "[reference('courseDirectoryAppInsights').outputs.InstrumentationKey.value]"
    },
    "appServiceName": {
      "type": "string",
      "value": "[variables('appServiceName')]"
    },
    "cosmosDbSQLName": {
      "type": "string",
      "value": "[variables('cosmosDbSQLName')]"
    },
    "azureSearchName": {
      "type": "string",
      "value": "[variables('azureSearchName')]"
    }
  }
}