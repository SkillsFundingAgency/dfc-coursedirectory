{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectPrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for all resources created for the project (except storage account, see below). Should be in the format dfc-env-proj"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the project storage account (as it follows a different naming convention)"
      }
    },
    "postcodeApiUrl": {
      "type": "string",
      "metadata": {
        "description": "API URL for the postcode search"
      }
    },
    "postcodeApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "API host key (code) needed to access the postcode search"
      }
    },
    "venueApiUrl": {
      "type": "string",
      "metadata": {
        "description": "API URL for the venue search"
      }
    },
    "venueApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "API host key (code) needed to access the function app (REST API)"
      }
    },
    "larsApiUrl": {
      "type": "string",
      "metadata": {
        "description": "API URL for the provider search"
      }
    },
    "larsApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "API URL for the provider search"
      }
    },
    "providerApiUrl": {
      "type": "string",
      "metadata": {
        "description": "API URL for the provider services"
      }
    },
    "providerApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "API host key (code) needed to access the provider seach function app (REST API)"
      }
    },
    "courseApiUrl": {
      "type": "string",
      "metadata": {
        "description": "API URL for the course services"
      }
    },
    "courseApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "API host key (code) needed to access the course service function app (REST API)"
      }
    },
    "apprenticeshipApiUrl": {
      "type": "string",
      "metadata": {
        "description": "API URL for the apprentischip services"
      }
    },
    "apprenticeshipApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "API host key (code) needed to access the apprenticeship service function app (REST API)"
      }
    },
    "searchDomain": {
      "type": "string",
      "metadata": {
        "description": "URL for the search services"
      }
    },
    "searchAdminKey": {
      "type": "securestring",
      "metadata": {
        "description": "Admin key for updating seach (REST API)"
      }
    },
    "searchQueryKey": {
      "type": "securestring",
      "metadata": {
        "description": "Query key for reading seach (REST API)"
      }
    },
    "dfeClientID": {
      "type": "string",
      "metadata": {
        "description": "DfE Signin client ID"
      }
    },
    "dfeClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "DfE Signin client secret (key)"
      }
    },
    "dfeEndpointUrl": {
      "type": "string",
      "metadata": {
        "description": "DfE Signin URL"
      }
    },
    "dfeMetadataUrl": {
      "type": "string",
      "metadata": {
        "description": "DfE Signin metadata URL"
      }
    },
    "dfeCallBackPath": {
      "type": "string",
      "metadata": {
        "description": "Path in URL that DfE Signin calls back after authentication"
      }
    },
    "dfeSignedOutPath": {
      "type": "string",
      "metadata": {
        "description": "Path in URL that DfE Signin calls back after sign out"
      }
    },
    "dfeApiSecret": {
      "type": "securestring",
      "metadata": {
        "description": "Shared secret for DfE Signin"
      }
    },
    "dfeApiUri": {
      "type": "string",
      "metadata": {
        "description": "DfE Siginin Uri"
      }
    },
    "sqlCourseDirectoryConnectionString": {
      "type": "string",
      "metadata": {
        "description": "ADO.NET connection string for the course directory database"
      }
    },
    "courseTextApiUrl": {
      "type": "string",
      "metadata": {
        "description": "API URL for the coursetext services"
      }
    },
    "courseTextApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "API host key (code) needed to access the coursetext service function app (REST API)"
      }
    },
    "findCourseApiUrl": {
      "type": "string",
      "metadata": {
        "description": "API URL for the course API REST services"
      }
    },
    "findCourseApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "API host key for above"
      }
    },
    "findCourseApiPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for accessing the findacourse backend api"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "metadata": {
        "description": "The name of the provider portal shared ASP in this environment"
      }
    },
    "appHostName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Custom host name for the website"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Key vault with the certificate in - only used if appHostName is specified"
      }
    },
    "keyVaultResourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource group for the key vault - only used if appHostName is specified"
      }
    },
    "certificateName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the secret (certificate) as it appears in key vault - only used if appHostName is specified"
      }
    },
    "blobStorageSettingsContainerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the provider files container, this is hardcoded into the parameters.json file"
      }
    },
    "BlobStorageSettingsInlineProcessingThreshhold": {
      "type": "string",
      "metadata": {
        "description": "The limit of the number of items to process online.  If broached, offline processing of the bulk upload will occurr"
      }
    },
    "EnvironmentName": {
      "type": "string",
      "metadata": {
        "description": "EnvironmentName to be used in the EnvironmentSetting__EnvironmentName config setting.  This may be different to the Azure DevOps environment"
      }
    },
    "BulkUploadSecondsPerRecord": {
      "type": "string",
      "metadata": {
        "description": "The CourseServiceSettings__BulkUploadSecondsPerRecord app setting"
      }
    },
    "ProviderPortalSharedResourceGroupName": {
      "type": "string"
    },
    "CosmosAccountEndpoint": {
      "type": "string",
      "metadata": {
        "description": "URL to the cosmos db account"
      }
    },
    "CosmosAccountAccessKey": {
      "type": "securestring",
      "metadata": {
        "description": "Access key for the cosmos db account"
      }
    },
    "FeatureFlags": {
      "type": "string",
      "metadata": {
        "description": "Feature flags that are passed to the app settings"
      }
    },
    "RedisCacheName": {
      "type": "string",
      "metadata": {
        "description": "The name of the project-wide shared redis cache instance"
      }
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/ArmTemplates/",
    "appInsightsName": "[concat(variables('appServiceName'),'-ai')]",
    "appServiceName": "[concat(parameters('projectPrefix'),'-as')]",
    "functionAppName": "[concat(parameters('projectPrefix'),'-fa')]",
    "functionAppInsightsName": "[concat(variables('functionAppName'),'-ai')]"
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "courseDirectoryAppInsights",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('appInsightsName')]"
          },
          "attachedService": {
            "value": "[variables('appServiceName')]"
          }
        }
      }
    },
    {
      "name": "courseDirectoryCertificates",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('providerPortalSharedResourceGroupName')]",
      "apiVersion": "2017-05-10",
      "condition": "[greater(length(parameters('appHostName')),0)]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultCertificateName": {
            "value": "[parameters('certificateName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('keyVaultResourceGroup')]"
          },
          "serverFarmId": {
            "value": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "courseDirectoryAppService",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "courseDirectoryCertificates",
        "courseDirectoryAppInsights"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('appServiceName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('appServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[resourcegroup().name]"
          },
          "customHostName": {
            "value": "[parameters('appHostName')]"
          },
          "certificateThumbprint": {
            "value": "[if(greater(length(parameters('appHostName')),0), reference('courseDirectoryCertificates').outputs.certificateThumbprint.value, '')]"
          },
          "deployStagingSlot": {
            "value": true
          },
          "clientAffinity": {
            "value": true
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference('courseDirectoryAppInsights').outputs.InstrumentationKey.value]"
              },
              {
                "name": "GovukPhaseBannerSettings__IsVisible",
                "value": true
              },
              {
                "name": "GovukPhaseBannerSettings__Tag",
                "value": "Beta"
              },
              {
                "name": "GovukPhaseBannerSettings__LinkUrl",
                "value": "https://www.smartsurvey.co.uk/s/VPOK2/"
              },
              {
                "name": "GovukPhaseBannerSettings__LinkText",
                "value": "feedback"
              },
              {
                "name": "LarsSearchSettings__ApiUrl",
                "value": "[parameters('larsApiUrl')]"
              },
              {
                "name": "LarsSearchSettings__ApiKey",
                "value": "[parameters('larsApiKey')]"
              },
              {
                "name": "LarsSearchSettings__ApiVersion",
                "value": "2017-11-11"
              },
              {
                "name": "LarsSearchSettings__Indexes",
                "value": "azuresql-index"
              },
              {
                "name": "LarsSearchSettings__ItemsPerPage",
                "value": 10
              },
              {
                "name": "LarsSearchSettings__PageParamName",
                "value": "PageNo"
              },
              {
                "name": "PostCodeSearchSettings__FindAddressesBaseUrl",
                "value": "https://services.postcodeanywhere.co.uk/PostcodeAnywhere/Interactive/FindByPostcode/v1.00/json3.ws?"
              },
              {
                "name": "PostCodeSearchSettings__RetrieveAddressBaseUrl",
                "value": "[parameters('postcodeApiUrl')]"
              },
              {
                "name": "PostCodeSearchSettings__Key",
                "value": "[parameters('postcodeApiKey')]"
              },
              {
                "name": "VenueServiceSettings__ApiUrl",
                "value": "[parameters('venueApiUrl')]"
              },
              {
                "name": "VenueServiceSettings__ApiKey",
                "value": "[parameters('venueApiKey')]"
              },
              {
                "name": "VenueServiceSettings__ApiVersion",
                "value": ""
              },
              {
                "name": "ProviderServiceSettings__ApiUrl",
                "value": "[parameters('providerApiUrl')]"
              },
              {
                "name": "ProviderServiceSettings__ApiKey",
                "value": "[parameters('providerApiKey')]"
              },
              {
                "name": "CourseServiceSettings__ApiUrl",
                "value": "[parameters('courseApiUrl')]"
              },
              {
                "name": "CourseServiceSettings__ApiKey",
                "value": "[parameters('courseApiKey')]"
              },
              {
                "name": "ApprenticeshipServiceSettings__ApiUrl",
                "value": "[parameters('apprenticeshipApiUrl')]"
              },
              {
                "name": "ApprenticeshipServiceSettings__ApiKey",
                "value": "[parameters('apprenticeshipApiKey')]"
              },
              {
                "name": "AppUISettings__VenueNameComponentSettings__VenueName_Label",
                "value": "Venue name"
              },
              {
                "name": "AppUISettings__CourseForComponentSettings__TextFieldMaxChars",
                "value": "2000"
              },
              {
                "name": "AppUISettings__EntryRequirementsComponentSettings__TextFieldMaxChars",
                "value": "500"
              },
              {
                "name": "AppUISettings__WhatWillLearnComponentSettings__TextFieldMaxChars",
                "value": "1500"
              },
              {
                "name": "AppUISettings__HowYouWillLearnComponentSettings__TextFieldMaxChars",
                "value": "500"
              },
              {
                "name": "AppUISettings__WhatYouNeedComponentSettings__TextFieldMaxChars",
                "value": "500"
              },
              {
                "name": "AppUISettings__HowAssessedComponentSettings__TextFieldMaxChars",
                "value": "500"
              },
              {
                "name": "AppUISettings__WhereNextComponentSettings__TextFieldMaxChars",
                "value": "500"
              },
              {
                "name": "OnspdSearchSettings__SearchServiceName",
                "value": "[parameters('searchDomain')]"
              },
              {
                "name": "OnspdSearchSettings__SearchServiceAdminApiKey",
                "value": "[parameters('searchAdminKey')]"
              },
              {
                "name": "OnspdSearchSettings__SearchServiceQueryApiKey",
                "value": "[parameters('searchQueryKey')]"
              },
              {
                "name": "OnspdSearchSettings__IndexName",
                "value": "onspd"
              },
              {
                "name": "DFESignInSettings__ClientID",
                "value": "[parameters('dfeClientID')]"
              },
              {
                "name": "DFESignInSettings__ClientSecret",
                "value": "[parameters('dfeClientSecret')]"
              },
              {
                "name": "DFESignInSettings__TokenEndpoint",
                "value": "[parameters('dfeEndpointUrl')]"
              },
              {
                "name": "DFESignInSettings__MetadataAddress",
                "value": "[parameters('dfeMetadataUrl')]"
              },
              {
                "name": "DFESignInSettings__CallbackPath",
                "value": "[parameters('dfeCallBackPath')]"
              },
              {
                "name": "DFESignInSettings__SignedOutCallbackPath",
                "value": "[parameters('dfeSignedOutPath')]"
              },
              {
                "name": "DFESignInSettings__Issuer",
                "value": "CourseDirectory"
              },
              {
                "name": "DFESignInSettings__Audience",
                "value": "signin.education.gov.uk"
              },
              {
                "name": "DFESignInSettings__APISecret",
                "value": "[parameters('dfeApiSecret')]"
              },
              {
                "name": "DFESignInSettings__APIUri",
                "value": "[parameters('dfeApiUri')]"
              },
              {
                "name": "CourseTextServiceSettings__ApiUrl",
                "value": "[parameters('courseTextApiUrl')]"
              },
              {
                "name": "CourseTextServiceSettings__ApiKey",
                "value": "[parameters('courseTextApiKey')]"
              },
              {
                "name": "FindACourseServiceSettings__ApiUrl",
                "value": "[parameters('findCourseApiUrl')]"
              },
              {
                "name": "FindACourseServiceSettings__ApiKey",
                "value": "[parameters('findCourseApiKey')]"
              },
              {
                "name": "FindACourseServiceSettings__UserName",
                "value": "APIUser"
              },
              {
                "name": "FindACourseServiceSettings__Password",
                "value": "[parameters('findCourseApiPassword')]"
              },
              {
                "name": "BlobStorageSettings__AccountName",
                "value": "[parameters('storageAccountName')]"
              },
              {
                "name": "BlobStorageSettings__AccountKey",
                "value": "[listKeys(resourceId(parameters('providerPortalSharedResourceGroupName'), 'Microsoft.Storage/storageAccounts',parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
              },
              {
                "name": "BlobStorageSettings__Container",
                "value": "[parameters('blobStorageSettingsContainerName')]"
              },
              {
                "name": "BlobStorageSettings__TemplatePath",
                "value": "bulkuploadtemplate.csv"
              },
              {
                "name": "BlobStorageSettings__InlineProcessingThreshold",
                "value": "[parameters('BlobStorageSettingsInlineProcessingThreshhold')]"
              },
              {
                "name": "EnvironmentSettings__EnvironmentName",
                "value": "[parameters('environmentName')]"
              },
              {
                "name": "ApprenticeshipSettings__NationalRadius",
                "value": "600"
              },
              {
                "name": "ApprenticeshipSettings__SubRegionRadius",
                "value": "10"
              },
              {
                "name": "CourseServiceSettings__BulkUploadSecondsPerRecord",
                "value": "[parameters('BulkUploadSecondsPerRecord')]"
              },
              {
                "name": "BlobStorageSettings__ApprenticeshipsTemplatePath",
                "value": "apprenticeshipsbulkuploadtemplate.csv"
              },
              {
                "name": "CosmosDbSettings__EndpointUri",
                "value": "[parameters('CosmosAccountEndpoint')]"
              },
              {
                "name": "CosmosDbSettings__PrimaryKey",
                "value": "[parameters('CosmosAccountAccessKey')]"
              },
              {
                "name": "FeatureFlags",
                "value": "[parameters('FeatureFlags')]"
              },
              {
                "name": "DataProtection__ContainerName",
                "value": "data-protection-keys"
              },
              {
                "name": "ConnectionStrings__Redis",
                "value": "[concat(parameters('RedisCacheName'), '.redis.cache.windows.net:6380,ssl=True,abortConnect=False,password=', listKeys(resourceId(parameters('ProviderPortalSharedResourceGroupName'), 'Microsoft.Cache/Redis', parameters('RedisCacheName')), '2015-08-01').primaryKey)]"
              }
            ]
          },
          "appServiceConnectionStrings": {
            "value": [
              {
                "name": "DefaultConnection",
                "type": "SQLServer",
                "connectionString": "[parameters('sqlCourseDirectoryConnectionString')]"
              }
            ]
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[variables('functionAppInsightsName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('functionAppInsightsName')]"
          },
          "attachedService": {
            "value": ""
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[variables('functionAppName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'app-service.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('functionAppName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('appServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[resourcegroup().name]"
          },
          "appServiceType": {
            "value": "functionapp"
          },
          "deployStagingSlot": {
            "value": true
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~3"
              },
              {
                "name": "MSDEPLOY_RENAME_LOCKED_FILES",
                "value": "1"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(variables('functionAppInsightsName')).outputs.InstrumentationKey.value]"
              },
              {
                "name": "CosmosDbSettings__EndpointUri",
                "value": "[parameters('CosmosAccountEndpoint')]"
              },
              {
                "name": "CosmosDbSettings__PrimaryKey",
                "value": "[parameters('CosmosAccountAccessKey')]"
              }
            ]
          },
          "appServiceConnectionStrings": {
            "value": [
              {
                "name": "DefaultConnection",
                "type": "SQLServer",
                "connectionString": "[parameters('sqlCourseDirectoryConnectionString')]"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[variables('functionAppInsightsName')]"
      ]
    }
  ],
  "outputs": {
    "appInsightInstrumentationKey": {
      "type": "string",
      "value": "[reference('courseDirectoryAppInsights').outputs.InstrumentationKey.value]"
    },
    "appServiceName": {
      "type": "string",
      "value": "[variables('appServiceName')]"
    }
  }
}