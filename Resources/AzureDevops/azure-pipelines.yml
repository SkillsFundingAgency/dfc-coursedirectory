pool:
  name: NCS - CI and CD
  demands:
  - azureps
  - npm
  - node.js

variables:
  BuildPlatform: 'any cpu'
  BuildConfiguration: 'release'
  GitVersionConfigFilePath: Resources/AzureDevOps/GitVersion.yml
  group: dfc-findacourse-build

resources:
  repositories:
  - repository: self
    clean: true
  - repository: dfc-devops
    type: github
    name: SkillsFundingAgency/dfc-devops
    endpoint: 'GitHub (ESFA)'
    ref: refs/tags/v1.5.0

trigger:
  batch: true
  branches:
    include:
    - release/*
    - main

pr:
  branches:
    include:
    - release/*
    - main

workspace:
  clean: all

steps:

- task: UseGitVersion@5
  displayName: GitVersion
  inputs:
    useConfigFile: true
    configFilePath: ${{ variables.GitVersionConfigFilePath }}
    versionSpec: '5.3.x'

# ARM template
- template: AzureDevOpsTemplates/Build/dfc-arm-build.yml@dfc-devops
  parameters:
    ArmTemplateRoot: '$(System.DefaultWorkingDirectory)\Resources\Azure\ArmTemplates'

- task: CopyFiles@2
  displayName: 'Copy Files: AzureSearch'
  inputs:
    Contents: 'Resources/AzureSearch/*'
    TargetFolder: '$(build.artifactstagingdirectory)'

# restore symlink
- script: |
    del v2 /F /Q
    mklink /D v2 ..\..\Dfc.CourseDirectory.WebV2\Content
  displayName: 'Restore v2 content symlink'
  workingDirectory: src/Dfc.CourseDirectory.Web/wwwroot

- task: Npm@1
  displayName: 'npm install'
  inputs:
    workingDir: 'src/Dfc.CourseDirectory.Web'
    verbose: false

- task: Gulp@0
  displayName: 'Gulp '
  inputs:
    gulpFile: 'src/Dfc.CourseDirectory.Web/gulpfile.js'
    targets: 'prod'

- task: MSBuild@1
  displayName: Build database
  inputs:
    solution: 'src/Dfc.CourseDirectory.Database/Dfc.CourseDirectory.Database.sqlproj'
    platform: '${{ variables.BuildPlatform }}'
    configuration: '${{ variables.BuildConfiguration }}'
    msbuildArguments: '-p:OutputPath=bin/${{ variables.BuildConfiguration }}/'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration ${{ variables.BuildConfiguration }}'
  displayName: Build

- powershell: |
    $testProjects = Get-ChildItem tests/ -Directory -Filter *.Tests

    foreach ($project in $testProjects) {
      dotnet test tests/${project}/ --configuration $(BuildConfiguration) --filter SkipOnCI!=true --logger trx --results-directory $(Agent.TempDirectory)

      if ($LASTEXITCODE -ne 0) {
        Exit $LASTEXITCODE
      }
    }
  displayName: Test
  env:
    ConnectionStrings__DefaultConnection: $(IntegrationSQLDB)

- task: PublishTestResults@2
  displayName: "Publish Test Results"
  inputs:
    testResultsFormat: VSTest
    testResultsFiles: "**/*.trx"
    searchFolder: "$(Agent.TempDirectory)"
  condition: succeededOrFailed()

- task: MSBuild@1
  displayName: Publish Dfc.CourseDirectory.Web
  inputs:
    solution: 'src/Dfc.CourseDirectory.Web/Dfc.CourseDirectory.Web.csproj'
    platform: '${{ variables.BuildPlatform }}'
    configuration: '${{ variables.BuildConfiguration }}'
    msbuildArguments: '-t:Publish -p:PublishDir=$(System.DefaultWorkingDirectory)/dist/Dfc.CourseDirectory.Web'
  
- task: ArchiveFiles@2
  displayName: Zip Dfc.CourseDirectory.Web
  inputs:
    rootFolderOrFile: 'dist/Dfc.CourseDirectory.Web'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(build.artifactstagingdirectory)/Dfc.CourseDirectory.Web.zip'

- task: MSBuild@1
  displayName: Publish Dfc.CourseDirectory.Functions
  inputs:
    solution: 'src/Dfc.CourseDirectory.Functions/Dfc.CourseDirectory.Functions.csproj'
    platform: '${{ variables.BuildPlatform }}'
    configuration: '${{ variables.BuildConfiguration }}'
    msbuildArguments: '-t:Publish -p:PublishDir=$(System.DefaultWorkingDirectory)/dist/Dfc.CourseDirectory.Functions'
  
- task: ArchiveFiles@2
  displayName: Zip Dfc.CourseDirectory.Functions
  inputs:
    rootFolderOrFile: 'dist/Dfc.CourseDirectory.Functions'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(build.artifactstagingdirectory)/Dfc.CourseDirectory.Functions.zip'

- task: CopyFiles@2
  displayName: 'Copy files: database'
  inputs:
    SourceFolder: 'src/Dfc.CourseDirectory.Database/bin/$(BuildConfiguration)'
    Contents: '*'
    TargetFolder: '$(build.artifactstagingdirectory)/database'

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  inputs:
     pathtoPublish: $(Build.ArtifactStagingDirectory)
     artifactName: Dfc.CourseDirectory