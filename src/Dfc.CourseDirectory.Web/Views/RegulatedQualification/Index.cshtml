@using Dfc.CourseDirectory.Models.Enums
@using Dfc.CourseDirectory.Web.Helpers
@model RegulatedViewModel
@{
    ViewData["Title"] = "What are you awarding with this course?"; 
    Layout = "_Layout_Your_Courses";
}
<form asp-controller="RegulatedQualification" asp-action="RegulatedTypeSelected" method="post" id="QualificationType">
    
    <div id="errorsummary" class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary" style="display: none;">
        <h2 class="govuk-error-summary__title" id="error-summary-title">
            There is a problem
        </h2>
        <div class="govuk-error-summary__body">
            <ul class="govuk-list govuk-error-summary__list"></ul>
        </div>
    </div>

        <div class="govuk-form-group">
            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                    <h1 class="govuk-fieldset__heading">
                        Are you awarding a regulated qualification with this course?
                    </h1>

                </legend>
                <span class="govuk-hint">Select one option</span>
                <div class="govuk-radios" val-required-message="Choose 1 option to continue" id="SelectQualificationType">

                    <div class="govuk-radios__item">
                        @Html.RadioButtonFor(m => m.WhatAreYouAwarding, WhatAreYouAwarding.Yes, new { @class = "govuk-radios__input", id = WhatAreYouAwarding.Yes })
                        <label class="govuk-label govuk-radios__label" for="@WhatAreYouAwarding.Yes">
                            @WebHelper.GetEnumDescription(WhatAreYouAwarding.Yes)
                        <span class="govuk-hint">The course leads to a qualification overseen by Ofqual or the QAA for Higher Education</span>
                        </label>
                    </div>
                    <div class="govuk-radios__item">
                        @Html.RadioButtonFor(m => m.WhatAreYouAwarding, WhatAreYouAwarding.No, new { @class = "govuk-radios__input", id = WhatAreYouAwarding.No })
                        <label class="govuk-label govuk-radios__label" for="@WhatAreYouAwarding.No">
                            @WebHelper.GetEnumDescription(WhatAreYouAwarding.No) <span class="govuk-hint">
    The course does not lead to a qualification overseen by Ofqual or the QAA for Higher Education
</span>
                                            </label>
                    </div>
                    
                </div>
            </fieldset>
  

    </div>
<button type="submit" class="govuk-button" id="next">Continue</button>
</form>

<script>
    (function ($) {
        $(function () {
            var validStates = [];
            var $button = $("#next");

            var $qualificationType = $("#SelectQualificationType").govUkRadios();
            var $errorSummary = $("#errorsummary").govUkErrorSummary();

            function isAllValid(currentValue) {
                return currentValue === true;
            }

            function validate() {

                validStates = [];
                $errorSummary.govUkErrorSummary("removeAll");
                $qualificationType.govUkRadios("validState");

                if ($.requiredValidate($qualificationType.find("input[type='radio']:checked").val())) {
                    $qualificationType.govUkRadios("validState");
                    validStates.push(true);
                } else {
                    $qualificationType.govUkRadios("invalidState", $qualificationType.attr("val-required-message"));
                    validStates.push(false);
                    var $anchor = document.createElement("a");
                    $anchor.href = "#SelectQualificationType";
                    $anchor.innerHTML = $qualificationType.attr("val-required-message");
                    $anchor.id = "error-hash-link-" + "a" + "-" + 1;
                    $errorSummary.govUkErrorSummary("add", $anchor);
                    $errorSummary.govUkErrorSummary("show");
                }
            }

            $button.on("click", function (event) {
                event.preventDefault();
                validate();
                if (validStates.every(isAllValid)) {
                    $("#QualificationType").submit();
                }
            });

        });
    })(jQuery);
</script>