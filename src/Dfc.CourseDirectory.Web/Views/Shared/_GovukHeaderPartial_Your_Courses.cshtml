
@using Microsoft.AspNetCore.Identity
@using Dfc.CourseDirectory.Web.Areas.Identity.Data;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Http
@using Dfc.CourseDirectory.Services.Interfaces.ProviderService
@using Dfc.CourseDirectory.Services.ProviderService

@inject IHttpContextAccessor HttpContextAccessor
@inject IAuthorizationService Authorization
@inject SignInManager<User> SignInManager

@inject IProviderService providerService
@inject UserManager<User> UserManager
<header class="govuk-header " role="banner" data-module="header">
    @*<div class="govuk-header__container govuk-width-container">*@
    <div class="govuk-header__container cd-fullwidth-container">
        <div class="govuk-header__logo">
            <a asp-controller="Home" asp-action="index" class="govuk-header__link govuk-header__link--homepage">
            </a>
        </div>
        <div class="govuk-header__content">
            <a href="/" class="govuk-header__link govuk-header__link--service-name">
                Publish to the course directory
            </a>

            @{
                //Handles lack of controller error
                if (ViewContext.RouteData.Values["Controller"] == null)
                {
                    ViewContext.RouteData.Values.Add("Action", "");
                    ViewContext.RouteData.Values.Add("Controller", "");
                }
                var Option = HttpContextAccessor.HttpContext.Session.GetString("Option");
            }

            <button type="button" role="button" class="govuk-header__menu-button js-header-toggle" aria-controls="navigation" aria-label="Show or hide Top Level Navigation">Menu</button>

        </div>
    </div>
</header>



<div class="cd-subHead">
    <div class="cd-fullwidth-container cd-subHead-container">
        @if (User.Identity.IsAuthenticated)
        {

            var adminLogin = await Authorization.AuthorizeAsync(User, "Admin");
            var providerLogin = await Authorization.AuthorizeAsync(User, "Provider");

            var providerName = "";
            var ukPRN = HttpContextAccessor.HttpContext.Session.GetInt32("UKPRN");
            if (ukPRN != null)
            {
                var providerSearchResult = await providerService.GetProviderByPRNAsync(new ProviderSearchCriteria(ukPRN.ToString()));
                providerName = providerSearchResult.Value.Value.FirstOrDefault()?.ProviderName;
            }
            <span class="cd-subHead--item">@providerName</span>
            <div class="cd-subHead--item">
                @*<span>
                        @UserManager.GetUserName(User)


                    </span>
                    <span>
                        <a href="#" id="submit-link" class="button" onclick="logout.submit();">Sign out</a>
                    </span>*@

                <div class="navbar-right">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <span>
                            @{ 
                                string email = User.Claims.Where(c => c.Type == "email")
                                            .Select(c => c.Value).SingleOrDefault();
                            }
                            @email
                        </span>
                        <span>
                            <a asp-action="Logout" asp-controller="Auth" id="submit-link" class="button">Sign out</a>
                        </span>
                    }
                </div>


            </div>
            @*<span class="cd-subHead--item">
                    <partial name="_LoginPartial" />
                </span>*@

            @*<div class="cd-subHead--item">*@

            @*</div>*@
        }

    </div>
</div>

<div class="govuk-phase-banner cd-fullwidth-container">
<p class="govuk-phase-banner__content">
    <strong class="govuk-tag govuk-phase-banner__content__tag ">
        Beta
    </strong>
    <span class="govuk-phase-banner__text">
        This is a new service – your
        <a class="govuk-link" href="#">feedback</a> will help us to improve it.
    </span>
</p>
</div>
<div class="navigation-container cd-fullwidth-container govuk-body">
    <nav class="cd-secondary-nav">
        @*<a class="cd-secondary-nav--item" ahref="">venue</a>
        <a class="cd-secondary-nav--item" ahref="">item</a>*@

        @{
            if (User.Identity.IsAuthenticated)
            {
                var authorised = await Authorization.AuthorizeAsync(User, "ElevatedUserRole");
                var superUser = await Authorization.AuthorizeAsync(User, "SuperUser");

                <a class="cd-secondary-nav--item" href="/">
                    Home
                </a>


                <a class="cd-secondary-nav--item" href="/RegulatedQualification">
                    Qualifications
                </a>


                <a class="cd-secondary-nav--item" href="/Venues">
                    Venues
                </a>

                if (authorised.Succeeded)
                {
                    <a class="cd-secondary-nav--item" href="/Provider">
                        Add Provider
                    </a>




                }

                <a class="cd-secondary-nav--item" href="/ProviderCourses/Index">
                    Courses
                </a>

                if (authorised.Succeeded || superUser.Succeeded)
                {

                    <a class="cd-secondary-nav--item" href="/BulkUpload">
                        Bulk Upload
                    </a>

                }
                var pendingCourses = HttpContextAccessor.HttpContext.Session.GetString("PendingCourses");

                if (pendingCourses == "true")
                {
                    if (authorised.Succeeded || superUser.Succeeded)
                    {
                        <a class="cd-secondary-nav--item" href="/Migration">
                            Migration
                        </a>

                    }
                }

            }
        }
    </nav>
</div>

@*<div class="cd-header-blue">
        <div class="cd-fullwidth-container">
            <div class="govuk-grid-row row">
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="govuk-grid-column-one-half">
                        @{
                            var adminLogin = await Authorization.AuthorizeAsync(User, "Admin");
                            var providerLogin = await Authorization.AuthorizeAsync(User, "Provider");

                            var providerName = "";
                            var ukPRN = HttpContextAccessor.HttpContext.Session.GetInt32("UKPRN");
                            if (ukPRN != null)
                            {
                                var providerSearchResult = await providerService.GetProviderByPRNAsync(new ProviderSearchCriteria(ukPRN.ToString()));
                                providerName = providerSearchResult.Value.Value.FirstOrDefault()?.ProviderName;
                            }
                        }
                        @providerName
                    </div>
                    <partial name="_LoginPartial" />
                }
            </div>
        </div>
    </div>

    <div class="cd-header-menu">
        <div class="cd-fullwidth-container">
            <div class="govuk-grid-row row">
                <div class="govuk-grid-column-full">

                    @{
                        if (User.Identity.IsAuthenticated)
                        {
                            var authorised = await Authorization.AuthorizeAsync(User, "ElevatedUserRole");
                            var superUser = await Authorization.AuthorizeAsync(User, "SuperUser");

                            <a class="govuk-header__link" href="/">
                                Home
                            </a>


                            <a class="" href="/RegulatedQualification">
                                Qualifications
                            </a>


                            <a class="" href="/Venues">
                                Venues
                            </a>

                            if (authorised.Succeeded)
                            {
                                <a class="" href="/Provider">
                                    Add Provider
                                </a>




                            }

                            <a class="" href="/ProviderCourses/Index">
                                Courses
                            </a>

                            if (authorised.Succeeded || superUser.Succeeded)
                            {

                                <a class="" href="/BulkUpload">
                                    Bulk Upload
                                </a>

                            }
                            var pendingCourses = HttpContextAccessor.HttpContext.Session.GetString("PendingCourses");

                            if (pendingCourses == "true")
                            {
                                if (authorised.Succeeded || superUser.Succeeded)
                                {
                                    <a class="" href="/Migration">
                                        Migration
                                    </a>

                                }
                            }

                        }
                    }


                </div>

            </div>
        </div>
    </div>*@

















