@using Microsoft.AspNetCore.Identity
@using Dfc.CourseDirectory.Web.Areas.Identity.Data;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Http
@using Dfc.CourseDirectory.Services.Interfaces.ProviderService
@using Dfc.CourseDirectory.Services.ProviderService

@inject IHttpContextAccessor HttpContextAccessor
@inject IAuthorizationService Authorization

@inject IProviderService providerService

<header class="govuk-header " role="banner" data-module="header">
    <div class="govuk-header__container govuk-width-container">
        <div class="govuk-header__logo">
            <a asp-controller="Home" asp-action="index" class="govuk-header__link govuk-header__link--homepage">
            </a>
        </div>
        <div class="govuk-header__content">
            <a href="/" class="govuk-header__link govuk-header__link--service-name">
                Publish to the course directory
            </a>

            @{
                //Handles lack of controller error
                if (ViewContext.RouteData.Values["Controller"] == null)
                {
                    ViewContext.RouteData.Values.Add("Action", "");
                    ViewContext.RouteData.Values.Add("Controller", "");
                }
                var Option = HttpContextAccessor.HttpContext.Session.GetString("Option");
            }

            <button type="button" role="button" class="govuk-header__menu-button js-header-toggle" aria-controls="navigation" aria-label="Show or hide Top Level Navigation">Menu</button>
          
        </div>
    </div>
    <div class="cd-header-blue">
        <div class="govuk-width-container">
            <div class="govuk-grid-row row">
                @if (User.Identity.IsAuthenticated)
                {

                    <div class="govuk-grid-column-one-half">
                        @{
                            var adminLogin = await Authorization.AuthorizeAsync(User, "Admin");
                            var providerLogin = await Authorization.AuthorizeAsync(User, "Provider");

                            var providerName = "";
                            var ukPRN = HttpContextAccessor.HttpContext.Session.GetInt32("UKPRN");
                            if (ukPRN != null)
                            {
                                var providerSearchResult = await providerService.GetProviderByPRNAsync(new ProviderSearchCriteria(ukPRN.ToString()));
                                providerName = providerSearchResult.Value.Value.FirstOrDefault()?.ProviderName;
                            }
                        }
                        @providerName</div>
                    <partial name="_LoginPartial"/>
                }

            </div>
        </div>
    </div>

    <div class="cd-header-menu">
        <div class="govuk-width-container">
            <div class="govuk-grid-row row">
                <div class="govuk-grid-column-full">

                    @{
                        if (User.Identity.IsAuthenticated)
                        {
                            var authorised = await Authorization.AuthorizeAsync(User, "ElevatedUserRole");
                            var superUser = await Authorization.AuthorizeAsync(User, "SuperUser");

                            <a class="govuk-header__link" href="/">
                                Home
                            </a>


                            <a class="" href="/RegulatedQualification">
                                Qualifications
                            </a>


                            <a class="" href="/Venues">
                                Venues
                            </a>

                            if (authorised.Succeeded)
                            {
                                <a class="" href="/Provider">
                                    Add Provider
                                </a>
                            }
                            <a class="" href="/ProviderCourses/Index">
                                Courses
                            </a>

                            if (authorised.Succeeded || superUser.Succeeded)
                            {

                                <a class="" href="/BulkUpload">
                                    Bulk Upload
                                </a>

                            }
                            var pendingCourses = HttpContextAccessor.HttpContext.Session.GetString("PendingCourses");

                            if (pendingCourses == "true")
                            {
                                if (authorised.Succeeded || superUser.Succeeded)
                                {
                                    <a class="" href="/Migration">
                                        Migration
                                    </a>

                                }
                            }


                        }
                    }


                </div>

            </div>
        </div>
    </div>

</header>






