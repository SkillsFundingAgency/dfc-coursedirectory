@using Dfc.CourseDirectory.Models.Enums
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Identity
@using Dfc.CourseDirectory.Web.Areas.Identity.Data;
@using Dfc.CourseDirectory.Web.ViewComponents.BackgroundBulkUploadNotification
@using Dfc.CourseDirectory.Web.ViewComponents.Notification
@model Dfc.CourseDirectory.Web.ViewModels.BulkUpload.BulkUploadViewModel
@inject IAuthorizationService Authorization
@{
    ViewData["Title"] = "Bulk upload apprenticeship training information";
    Layout = "_Layout_Your_Courses";
    var authorised = await Authorization.AuthorizeAsync(User, "Admin");
}

@if (Model.BulkUploadBackgroundInProgress)
{
    @await Component.InvokeAsync(nameof(BackgroundBulkUploadNotification),
        new BackgroundBulkUploadNotificationModel()
        {
            BulkUploadBackgroundInProgress = true,
            BulkUploadBackgroundRowCount = Model.BulkUploadBackgroundRowCount,
            BulkUploadBackgroundStartTimestamp = Model.BulkUploadBackgroundStartTimestamp
        });
}

<h1 class="govuk-heading-xl">Bulk upload apprenticeship training information</h1>
@{
    var styleAttribute = (string.IsNullOrEmpty(Model.NotificationTitle) && Model.errors == null)
        ? "style=\"display: none;\""
        : string.Empty;
}
<div id="errorSummary" class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary" @Html.Raw(styleAttribute)>
    <h2 class="govuk-error-summary__title" id="error-summary-title">
        @if (string.IsNullOrEmpty(Model.NotificationTitle))
        {
            <span>There is a problem</span>
        }
        else
        {
            @Model.NotificationTitle
        }
    </h2>
    <div class="govuk-error-summary__body">
        <ul class="govuk-list govuk-error-summary__list">
            @if (!string.IsNullOrEmpty(Model.NotificationMessage))
            {
                <li>@Model.NotificationMessage</li>
            }
            @if (Model.errors != null && Model.errors.Any())
            {
                foreach (var error in Model.errors)
                {
                    <li>
                        <span id="name-error" class="govuk-error-message">
                            <span class="govuk-visually-hidden">
                                Error:
                            </span>
                            @error
                        </span>
                    </li>
                }
            }
        </ul>
    </div>
</div>
<form method="post" id="bulkUploadForm" enctype="multipart/form-data"
      asp-controller="BulkUploadApprenticeships"
      asp-action="Index">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <div class="govuk-body">
                <p>
                    You can use a file to replace information about all of your published apprenticeship training. To create the file you can:
                    <ul>
                        <li>enter your apprenticeship training information in an empty template</li>
                        <li>update a template containing your published apprenticeship training information</li>
                    </ul>
                </p>
                <p>
                    Your updated apprenticeship training information will be published after you have uploaded your file and fixed any errors.
                </p>

                <div id="groupServerSideError" class="govuk-form-group">
                    <label class="govuk-heading-s" for="bulkUploadFile">
                        Upload a file
                    </label>
                    <span id="serverSideError" class="govuk-error-message" style="display: none">There is an error with the file. See above summary</span>
                    <input class="govuk-file-upload" id="bulkUploadFile" name="bulkUploadFile" type="file"
                           val-required-message="Select a file to upload"
                           val-file-extensions="csv"
                           val-file-extensions-message="The selected file must be a csv"
                           val-file-size-max="209715200"
                           val-file-size-max-message="The selected file must be smaller than 200MB" />
                </div>
                <div class="govuk-warning-text">
                    <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
                    <strong class="govuk-warning-text__text">
                        <span class="govuk-warning-text__assistive">Warning</span>
                        You'll replace all information about your apprenticeships if you continue.
                    </strong>
                </div>


                <div class="cta-container">
                    <button type="submit" id="uploadButton" class="govuk-button govuk-!-margin-right-3">
                        Continue
                    </button>
                    <a class="govuk-link " asp-controller="Home" asp-action="Index">Cancel</a>
                </div>
            </div>
        </div>
        <div class="govuk-grid-column-one-third">
            <div class="sidebar">

                <div class="widget white blue">
                    <h2 class="govuk-heading-s">Templates</h2>

                    <ul class="govuk-list">
                        <li>
                            @Html.ActionLink("Download a blank template", "GetApprenticeshipBulkUploadTemplateFile", "BlobStorage")
                        </li>
                        <li class="govuk-!-padding-bottom-4">
                          
                            
                                @Html.ActionLink("Download a template containing your current apprenticeships", "GetCurrentApprenticeshipsTemplateFile", "BlobStorage")
                            

                        </li>
                    </ul>

                </div>
            </div>

        </div>
    </div>
</form>
<script>
        (function ($) {
            $(function () {
                var $errorSummary = $("#errorSummary").govUkErrorSummary();
                var $bulkUploadFile = $("#bulkUploadFile").govUkFileUpload();
                var $button = $("#uploadButton");

                var hasServerSideError = '@(Model.errors != null && Model.errors.Any() ? true : false)'
                if (hasServerSideError === 'True') {
                    $("#serverSideError").show();
                    $("#groupServerSideError").addClass("govuk-form-group--error");
                }
                else {
                    $("#serverSideError").hide();
                    $("#groupServerSideError").removeClass("govuk-form-group--error");
                }

                function goBack() {
  window.history.back();
}

                $bulkUploadFile.on("change", function () {
                    $bulkUploadFile.govUkFileUpload("validState");
                    $errorSummary.govUkErrorSummary("removeAll");
                    $errorSummary.govUkErrorSummary("hide");
                });

                $button.on("click", function (event) {
                    event.preventDefault();
                    if (!$.requiredValidate($bulkUploadFile.val())) {
                        $bulkUploadFile.govUkFileUpload("invalidState", $bulkUploadFile.attr("val-required-message"));
                        var errorHashLinks = $bulkUploadFile.govUkFileUpload("getErrorHashLinks");
                        $errorSummary.govUkErrorSummary("add", errorHashLinks);
                        $errorSummary.govUkErrorSummary("show");
                    } else if ($bulkUploadFile[0].files) {
                        if (!$.fileExtensionsValidate({ extensions: $bulkUploadFile.attr("val-file-extensions") }, $bulkUploadFile[0].files[0])) {
                            $bulkUploadFile.govUkFileUpload("invalidState", $bulkUploadFile.attr("val-file-extensions-message"));
                            var errorHashLinks = $bulkUploadFile.govUkFileUpload("getErrorHashLinks");
                            $errorSummary.govUkErrorSummary("add", errorHashLinks);
                            $errorSummary.govUkErrorSummary("show");
                        } else if (!$.fileSizeMaxValidate({ max: $bulkUploadFile.attr("val-file-size-max") }, $bulkUploadFile[0].files[0])) {
                            $bulkUploadFile.govUkFileUpload("invalidState", $bulkUploadFile.attr("val-file-size-max-message"));
                            var errorHashLinks = $bulkUploadFile.govUkFileUpload("getErrorHashLinks");
                            $errorSummary.govUkErrorSummary("add", errorHashLinks);
                            $errorSummary.govUkErrorSummary("show");
                        } else {
                            $bulkUploadFile.govUkFileUpload("validState");
                            $errorSummary.govUkErrorSummary("removeAll");
                            $errorSummary.govUkErrorSummary("hide");
                            $("#bulkUploadForm").submit();
                        }
                    } else {
                        $bulkUploadFile.govUkFileUpload("validState");
                        $errorSummary.govUkErrorSummary("removeAll");
                        $errorSummary.govUkErrorSummary("hide");
                        $("#bulkUploadForm").submit();
                    }
                });
            });
        })(jQuery);
</script>

