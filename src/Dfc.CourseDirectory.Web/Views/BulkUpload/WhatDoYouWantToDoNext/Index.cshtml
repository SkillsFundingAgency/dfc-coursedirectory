@using Dfc.CourseDirectory.Models.Enums
@using Dfc.CourseDirectory.Web.Helpers
@{
    ViewData["Title"] = "What do you want to do next?"; 
    Layout = "_Layout_Your_Courses";
}

@model Dfc.CourseDirectory.Web.ViewModels.BulkUpload.WhatDoYouWantToDoNextViewModel


<div class="content-container">


    <form class="govuk-!-margin-bottom-9" id="WhatDoYouWantToDoNextForm" asp-controller="BulkUpload" asp-action="WhatDoYouWantToDoNext" method="post">
        <span class="govuk-caption-xl">Course Directory</span>
        <div id="errorsummary" class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary" style="display: none;">
            <h2 class="govuk-error-summary__title" id="error-summary-title">
                There is a problem
            </h2>
            <div class="govuk-error-summary__body">
                <ul class="govuk-list govuk-error-summary__list"></ul>
            </div>
        </div>

        @if (string.IsNullOrEmpty(Model.Message))
        {
            <h1 class="govuk-heading-l">What do you want to do next?</h1>
        }
        else
        {
            <h1 class="govuk-heading-l">Fix errors</h1>
            <h2 class="govuk-heading-s">@Model.Message</h2>
        }

        <div class="govuk-form-group">
            <fieldset class="govuk-fieldset">
                @if (!string.IsNullOrEmpty(Model.Message))
                {
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        <h1 class="govuk-fieldset__heading">
                            What do you want to do next?
                        </h1>
                    </legend>
                }
                else
                {
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m govuk-visually-hidden">
                        <h1 class="govuk-fieldset__heading">
                            What do you want to do next?
                        </h1>
                    </legend>
                }
                <div class="govuk-radios" val-required-message="Select 'What do you want to do next?'" id="WhatDoYouWantToDoNext">
                    <div class="govuk-radios__item">
                        @Html.RadioButtonFor(m => m.WhatDoYouWantToDoNext, WhatDoYouWantToDoNext.OnScreen, new { @class = "govuk-radios__input", id = WhatDoYouWantToDoNext.OnScreen })
                        <label class="govuk-label govuk-radios__label" for="@WhatDoYouWantToDoNext.OnScreen">@WebHelper.GetEnumDescription(WhatDoYouWantToDoNext.OnScreen)</label>
                    </div>
                    <div class="govuk-radios__item">
                        @Html.RadioButtonFor(m => m.WhatDoYouWantToDoNext, WhatDoYouWantToDoNext.DownLoad, new { @class = "govuk-radios__input", id = WhatDoYouWantToDoNext.DownLoad })
                        <label class="govuk-label govuk-radios__label" for="@WhatDoYouWantToDoNext.DownLoad">@WebHelper.GetEnumDescription(WhatDoYouWantToDoNext.DownLoad)</label>
                    </div>
                    <div class="govuk-radios__item">
                        @Html.RadioButtonFor(m => m.WhatDoYouWantToDoNext, WhatDoYouWantToDoNext.Delete, new { @class = "govuk-radios__input", id = WhatDoYouWantToDoNext.Delete })
                        <label class="govuk-label govuk-radios__label" for="@WhatDoYouWantToDoNext.Delete">@WebHelper.GetEnumDescription(WhatDoYouWantToDoNext.Delete)</label>
                    </div>

                </div>
            </fieldset>
        </div>
        <br />

        <button type="submit" class="govuk-button" id="next">Continue</button>
    </form>

</div>

<script>
    (function ($) {
        $(function () {
            var validStates = [];
            var $button = $("#next");
            var $errorSummary = $("#errorsummary").govUkErrorSummary();

            var $whatDoYouWantToDoNext = $("#WhatDoYouWantToDoNext").govUkRadios();

            function isAllValid(currentValue) {
                return currentValue === true;
            }

            function validate() {

                validStates = [];
                $errorSummary.govUkErrorSummary("removeAll");
                $whatDoYouWantToDoNext.govUkRadios("validState");

                if ($.requiredValidate($whatDoYouWantToDoNext.find("input[type='radio']:checked").val())) {
                    $whatDoYouWantToDoNext.govUkRadios("validState");
                    validStates.push(true);

                } else {
                    $whatDoYouWantToDoNext.govUkRadios("invalidState", $whatDoYouWantToDoNext.attr("val-required-message"));
                    validStates.push(false);
                    var element = $whatDoYouWantToDoNext;
                    var $anchor = document.createElement("a");
                    $anchor.href = "#WhatDoYouWantToDoNext";
                    $anchor.innerHTML = $whatDoYouWantToDoNext.attr("val-required-message");
                    $anchor.id = "error-hash-link-" + "a" + "-" + 1;
                    $errorSummary.govUkErrorSummary("add", $anchor);
                    $errorSummary.govUkErrorSummary("show");
                }
            }

            $button.on("click", function (event) {
                event.preventDefault();
                validate();
                if (validStates.every(isAllValid)) {
                    $("#WhatDoYouWantToDoNextForm").submit();
                }
            });

        });
    })(jQuery);
</script>



