@using Dfc.CourseDirectory.Models.Enums
@using Dfc.CourseDirectory.Web.Helpers
@using Dfc.CourseDirectory.Web.ViewComponents.Courses.ChooseRegion
@using Dfc.CourseDirectory.Web.ViewComponents.Extensions
@{
    Layout = "_Layout_Your_Courses";
}

@model Dfc.CourseDirectory.Web.ViewModels.Apprenticeships.RegionsViewModel



    <form class="govuk-!-margin-bottom-9" id="ApprenticeshipRegionsForm" asp-controller="Apprenticeships" asp-action="Regions" method="post">
        @Html.HiddenFor(x => x.Mode)
        <div id="errorsummary" class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary" style="display: none;">
            <h2 class="govuk-error-summary__title" id="error-summary-title">
                There is an issue with this apprenticeship
            </h2>
            <div class="govuk-error-summary__body">
                <ul class="govuk-list govuk-error-summary__list"></ul>
            </div>
        </div>

        <div class="govuk-form-group">
            <fieldset class="govuk-fieldset">
                <h1 class="govuk-heading-xl">Select the regions where you provide this training</h1>

                <div class="govuk-form-group" id="RegionItemsCheckboxList">
                    <div id="sectionRegions">
                        @await Component.InvokeAsync(nameof(ChooseRegion), Model.ChooseRegion)
                    </div>
                </div>

            </fieldset>
        </div>
        <br />

        <button type="submit" class="govuk-button" id="next">Continue</button>
    </form>
<script>
    (function ($) {
        $(function () {

            var validStates = [];
            var $continue = $("#next");
            var $errorSummary = $("#errorsummary").govUkErrorSummary();
            var $regions = $("#SelectRegionCheckBoxes").govUkCheckboxes();

            function isAllValid(currentValue) {
                return currentValue === true;
            }


            function validate() {
                validStates = [];

                $regions.govUkCheckboxes("validState");
                $errorSummary.govUkErrorSummary("removeErrorHashLinksFor", $regions[0].id);
                $errorSummary.govUkErrorSummary("hideIfEmpty")

                if (!$.requiredValidate($regions.find("input[type='checkbox']:checked").val())) {
                    $regions.govUkCheckboxes("invalidState", $regions.attr("val-required-message"));
                    var regionsErrorHashLinks = $regions.govUkCheckboxes("getErrorHashLinks");
                    $errorSummary.govUkErrorSummary("add", regionsErrorHashLinks);
                    $errorSummary.govUkErrorSummary("show");
                    validStates.push(false);
                }

                if (!validStates.every(isAllValid)) {
                    $("html, body").animate({
                        scrollTop: $errorSummary.offset().top
                    }, 600);
                    $errorSummary.focus();
                }

                return validStates.every(isAllValid);
            }

              $continue.on("click", function (event) {
                event.preventDefault();
                validate();
                if (validStates.every(isAllValid)) {
                    $("#ApprenticeshipRegionsForm").submit();
                }
            });
        });
    })(jQuery);
</script>





