@using Dfc.CourseDirectory.Models.Enums
@using Dfc.CourseDirectory.Common

@model Dfc.CourseDirectory.Web.ViewModels.EditApprenticeship.EditApprenticeshipViewModel

@{
    ViewData["Title"] = "Edit Apprenticeship";
    Layout = "_Layout_Your_Apprenticeship";
}


    <form asp-controller="EditApprenticeship" asp-action="Index" method="post" id="editApprenticeship">
        @{
            var regex = RegexPattern.AllowEverything;
        }
        @{ var emailRegEx = @"^.+(@).+$"; }
        @{ var telephoneRegEx = @"^(((\+44)? ?(\(0\))? ?)|(0))( ?[0-9]{3,4}){3}?$";}
        @{ var websiteRegEx = @"^([-a-zA-Z0-9]{2,256}\.)+[a-z]{2,10}(\/.*)?";}

        <span class="govuk-caption-l">@Model.ApprenticeshipTitle</span>
        @Html.HiddenFor(x => x.ApprenticeshipId)
        @Html.HiddenFor(x => x.StandardCode)
        @Html.HiddenFor(x => x.FrameworkCode)
        @Html.HiddenFor(x => x.ApprenticeshipTitle)
        @Html.HiddenFor(x => x.ApprenticeshipType)
        @Html.HiddenFor(x => x.ApprenticeshipPreviousPage)
        @Html.HiddenFor(x => x.Mode)
        @Html.HiddenFor(x => x.Cancelled)
        @Html.HiddenFor(x => x.NotionalNVQLevelv2)
        @Html.HiddenFor(x => x.ShowCancelled)
        @Html.HiddenFor(x => x.Version)
        @Html.HiddenFor(x => x.PathwayCode)
        @Html.HiddenFor(x => x.ProgType)

        <h1 class="govuk-heading-l" style="padding-top: 20px;">
            Edit Apprenticeship
        </h1>

        <div id="errorsummary" class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary" style="display: none;">
            <h2 class="govuk-error-summary__title" id="error-summary-title">
                There is an issue with this apprenticeship
            </h2>
            <div class="govuk-error-summary__body">
                <ul class="govuk-list govuk-error-summary__list"></ul>
            </div>
        </div>

        <div class="section" id="sectionApprenticeshipInformationModel">

            <div class="govuk-character-count" id="InformationContainer">
                <div class="govuk-form-group">

                    <span id="infoRequired" class="" style="display: none"
                          val-required-message="Enter Apprenticeship information for employers">Enter Apprenticeship information for employers</span>
                    <span id="infoMax" class="" style="display: none"
                          val-max-length="750"
                          val-max-length-message="Apprenticeship information for employers should be no more than 750 characters">Apprenticeship information for employers should be no more than 750 characters</span>
                    <span id="infoInvalid" class="" style="display: none" val-regex="@regex"
                          val-regex-message="Apprenticeship information for employers should only have letters, numbers, spaces and commonly-used punctuation">Apprenticeship information for employers should only have letters, numbers, spaces and commonly-used punctuation</span>
                    <label id="govuk-label-Information" class="govuk-label" for="word-count">
                        Apprenticeship information for employers
                    </label>
                    <span class="govuk-hint">
                        Give information for employers about how you deliver this specific apprenticeship training. For useful advice on how to fill out this section go to the <a href="https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/746087/course_directory_provider_portal_user_guide_v7.pdf" target="_blank">guidance</a>
                    </span>
                    <textarea class="govuk-textarea" asp-for="@Model.Information" rows="5" id="info" aria-labelledby="govuk-label-Information"></textarea>
                </div>
            </div>
        </div>
        <div class="section" id="sectionWebSite">
            <div id="WebsiteContainer" class="govuk-form-group">
                <label id="govuk-label-Website" class="govuk-label">
                    Website
                </label>
                <span class="govuk-hint">
                    Your web page for this apprenticeship. Include http://
                </span>
                <input class="govuk-input" asp-for="@Model.WebSite" type="text" aria-labelledby="govuk-label-Website"
                       val-max-length="255"
                       val-max-length-message="Apprenticeship web page should be no more than 255 characters"
                       val-regex="@websiteRegEx"
                       val-regex-message="Enter a real web page, like http://www.provider.com/apprenticeship">
            </div>
        </div>
        <div class="section" id="sectionEmail">
            <h2 class="">Contact details</h2>

            <div id="EmailContainer" class="govuk-form-group">
                <span class="govuk-hint">Who can employers contact about this apprenticeship training?</span>

                <label id="govuk-label-Email" class="govuk-label">
                    Email
                </label>
                <input class="govuk-input" asp-for="@Model.Email" type="text" aria-labelledby="govuk-label-Email"
                       val-required-message="Enter email"
                       val-max-length="255"
                       val-max-length-message="Email should be no more than 255 characters"
                       val-regex="@emailRegEx"
                       val-regex-message="Enter a valid email">
            </div>
        </div>
        <div class="section" id="sectionTelephone">
            <div id="TelephoneContainer" class="govuk-form-group">
                <label id="govuk-label-Telephone" class="govuk-label">
                    Telephone
                </label>

                <input class="govuk-input govuk-!-width-one-half" asp-for="@Model.Telephone" type="text" aria-labelledby="govuk-label-Telephone"
                       val-required-message="Enter telephone"
                       val-min-length="11"
                       val-min-length-message="Telephone should be minimum 11 characters"
                       val-max-length="30"
                       val-max-length-message="Telephone should be no more than 30 characters"
                       val-regex="@telephoneRegEx"
                       val-regex-message="Enter a valid telephone number">
            </div>
        </div>
        <div class="section" id="sectionContactUSPage">

            <div id="ContactUsContainer" class="govuk-form-group">
                <label id="govuk-label-ContactUsIUrl" class="govuk-label">
                    Contact us page
                </label>
                <span class="govuk-hint">You can also add the url of any 'Contact us' page you have on your website</span>

                <input class="govuk-input" asp-for="@Model.ContactUsURL" type="text" aria-labelledby="govuk-label-ContactUsIUrl"
                       val-max-length="255"
                       val-regex="@websiteRegEx"
                       val-max-length-message="Contact us page should be no more than 255 characters"
                       val-regex-message="Enter a real web page, like http://www.provider.com/apprenticeship">
            </div>
        </div>

        <div class="cta-container">
            <button type="submit" class="govuk-button" id="continue" value="continue">
                Save
            </button>

        </div>
    </form>

<script>

     (function($) {
         $(function () {

            var validStates = [];
            var $continue = $("#continue");

            var $maxInfo= $("#infoMax");
            var $invalidInfo = $("#infoInvalid");
            var $requiredInfo = $("#infoRequired");

            var $info = $("#@nameof(Model.Information)").govUkInput();

            var $errorSummary = $("#errorsummary").govUkErrorSummary();

            var $maxLength = $maxInfo.attr('val-max-length');

            var $email = $("#@nameof(Model.Email)").govUkInput();
            var $website = $("#@nameof(Model.WebSite)").govUkInput();
            var $contactUs = $("#@nameof(Model.ContactUsURL)").govUkInput();
            var $telephone = $("#@nameof(Model.Telephone)").govUkInput();

            $website.on("blur", function () {
                var trimmed = $website.val().trim().toLowerCase();
                $website.val(trimmed);
                if ($website.val() !== "") {

                    if ($website.val().indexOf("http") >= 0 || $website.val().indexOf("https")>=0) {

                    }
                    else {
                        $website.val("http://" + trimmed);
                    }
                }
            });

            $contactUs.on("blur", function () {
                var trimmed = $contactUs.val().trim().toLowerCase();
                $contactUs.val(trimmed);
                if ($contactUs.val() !== "") {

                    if ($contactUs.val().indexOf("http") >= 0 || $contactUs.val().indexOf("https")>=0) {

                    }
                    else {
                        $contactUs.val("http://" + trimmed);
                    }
                }
            });

            function isAllValid(currentValue) {
                return currentValue === true;
            }

            tinymce.init({
                selector: '#info',
                plugins: "advlist lists autoresize test paste",
                menubar: false,
                statusbar: false,
                resize: false,
                in_height: 450,
                height: '75%',
                autoresize_min_height: 600,
                autoresize_max_height: 800,
                paste_as_text: true,
                toolbar: 'formatselect | bold | numlist bullist | removeformat ',
            }).then(function(editors) {
                $(".mce-branding").hide();
                $('i[class^=mce-ico]').each(function (index) {
                    $(this)[0].parentElement.removeAttribute("role");
                    $(this)[0].parentElement.setAttribute('aria-label', 'tinytext');
                });
                $('i[class^=mce-caret]').each(function (index) {
                    $(this)[0].parentElement.removeAttribute("role");
                    $(this)[0].parentElement.setAttribute('aria-label', 'tinytext');
                });
            });

            tinymce.PluginManager.add('test',
                function(editor) {
                var self = this;

                function update() {

                var $left = ($maxLength - self.getCount());
                var chars = $maxLength - self.getCount();
                if (chars === 1) {

                    $(".mce-container").removeClass("text-error");

                    $("#apprenticeship_info").removeClass("govuk-error-message");
                    $("#apprenticeship_info").addClass("govuk-hint");
                    $("#apprenticeship_info").text('You have ' + chars + ' character remaining');
                }

                if (chars >= 1) {

                    $(".mce-container").removeClass("text-error");

                    $("#apprenticeship_info").removeClass("govuk-error-message");
                    $("#apprenticeship_info").addClass("govuk-hint");
                    $("#apprenticeship_info").text('You have ' + chars + ' characters remaining');
                }

                if (chars < 0) {

                    $(".mce-container").addClass("text-error");

                    $("#apprenticeship_info").addClass("govuk-error-message");
                    $("#apprenticeship_info").removeClass("govuk-hint");
                    $(".mce-container").addClass("text-error");
                    if (self.getCount() - parseInt($maxLength) == 1) {
                        $("#apprenticeship_info").text('You have ' +
                            (self.getCount() - parseInt($maxLength)).toString() +
                            ' character too many');
                    } else {
                        $("#apprenticeship_info").text('You have ' +
                            (self.getCount() - parseInt($maxLength)).toString() +
                            ' characters too many');
                    }
                }

                if (chars === 0) {

                    $(".mce-container").removeClass("text-error");
                    $("#apprenticeship_info").removeClass("govuk-error-message");
                    $("#apprenticeship_info").addClass("govuk-hint");
                    $(".mce-container").removeClass("text-error");
                    $("#apprenticeship_info").text('You have ' + chars + ' characters remaining');
                }

            }

            editor.on('init',
                function() {

                    var ele = document.createElement("span");
                    validate();
                    var message = "";
                    var chars = $maxLength - self.getCount();
                    if (chars === 1) {

                        ele.className = "govuk-hint govuk-character-count__message"
                        message = 'You have ' + chars + ' character remaining';
                    }

                    if (chars >= 1) {
                        ele.className = "govuk-hint govuk-character-count__message"
                        message = 'You have ' + chars + ' characters remaining';
                    }

                    if (chars < 0) {

                        $(".mce-container").addClass("text-error");

                        $(".mce-container").closest(".govuk-form-group").addClass("govuk-form-group--error");

                        ele.className = "govuk-character-count__message govuk-error-message"
                        $(".mce-container").addClass("text-error");
                        if (self.getCount() - parseInt($maxLength) == 1) {
                            message = 'You have ' +
                                (self.getCount() - parseInt($maxLength)).toString() +
                                ' character too many';
                        } else {
                            message = 'You have ' +
                                (self.getCount() - parseInt($maxLength)).toString() +
                                ' characters too many';
                        }
                    }

                    if (chars === 0) {
                        ele.className = "govuk-hint govuk-character-count__message"
                        $(".mce-container").removeClass("text-error");
                        message = 'You have ' + chars + ' characters remaining';
                    }

                    window.setTimeout(function() {

                            ele.id = "apprenticeship_info";
                            ele.innerHTML = message;
                            $("#info").after(ele);

                            editor.on('setcontent beforeaddundo', update);

                            editor.on('keyup',
                                function(e) {

                                    update();
                                });
                        }, 0);

                });

            self.getCount = function() {
                var tx = editor.getContent({ format: 'raw' });
                var decoded = decodeHtml(tx);
                var decodedStripped = decoded.replace(/(<([^>]+)>)/ig, "").trim();
                var tc = decodedStripped.length;

                return tc;
            };

            function decodeHtml(html) {
                var txt = document.createElement("textarea");
                txt.innerHTML = html;
                return txt.value;
            }
                  });

               function validate() {

                validStates = [];

                $invalidInfo.removeClass("govuk-error-message");
                $invalidInfo.hide();
                $maxInfo.removeClass("govuk-error-message");
                $maxInfo.hide();
                $requiredInfo.removeClass("govuk-error-message");
                $requiredInfo.hide();

                $email.val($email.val().trim());
                $website.val($website.val().trim());
                $contactUs.val($contactUs.val().trim());

                $telephone.val($telephone.val().trim());

                var str = $telephone.val();
                str = $telephone.val().replace(/\s+/g, '');
                $telephone.val(str);

                $errorSummary.govUkErrorSummary("removeAll");
                $email.govUkInput("validState");
                $telephone.govUkInput("validState");

                 if (tinymce.get("info") !== null) {

                     if (!$.requiredValidate(tinymce.get('info').getBody().textContent.replace(/(<([^>]+)>)/ig, "").trim())) {
                         $requiredInfo.addClass("govuk-error-message");
                         $requiredInfo.show();

                         $(".mce-container").addClass("text-error");

                         $(".mce-container").closest(".govuk-form-group").addClass("govuk-form-group--error");

                         var element = $requiredInfo;
                         var $anchor = document.createElement("a");
                         $anchor.href = "#infoRequired";
                         $anchor.innerHTML = element.text();
                         $anchor.id = "error-hash-link-" + "infoRequired" + "-" + 1;

                         $errorSummary.govUkErrorSummary("add", $anchor);
                         $errorSummary.govUkErrorSummary("show");

                         validStates.push(false);
                     } else if (!$.regexValidate({ regex: $invalidInfo.attr("val-regex") }, tinymce.get('info').getBody().textContent.replace(/(<([^>]+)>)/ig, "").trim())) {
                $invalidInfo.addClass("govuk-error-message");
                $invalidInfo.show();

                $(".mce-container").addClass("text-error");

                $(".mce-container").closest(".govuk-form-group").addClass("govuk-form-group--error");

                var element = $invalidInfo;
                var $anchor = document.createElement("a");
                $anchor.href = "#infoInvalid";
                $anchor.innerHTML = element.text();
                $anchor.id = "error-hash-link-" + "infoInvalid" + "-" + 1;

                $errorSummary.govUkErrorSummary("add", $anchor);
                $errorSummary.govUkErrorSummary("show");

                validStates.push(false);
            } else if (

                !$.maxLengthValidate({ max: "750" }, tinymce.get('info').getBody().textContent.replace(/(<([^>]+)>)/ig, "").trim())) {

                $maxInfo.addClass("govuk-error-message");
                $maxInfo.show();

                $(".mce-container").addClass("text-error");

                $(".mce-container").closest(".govuk-form-group").addClass("govuk-form-group--error");

                var element = $maxInfo;
                var $anchor = document.createElement("a");
                $anchor.href = "#infoMax";
                $anchor.innerHTML = element.text();
                $anchor.id = "error-hash-link-" + "infoMax" + "-" + 1;

                $errorSummary.govUkErrorSummary("add", $anchor);
                $errorSummary.govUkErrorSummary("show");

                validStates.push(false);
            }
            else {
                $maxInfo.removeClass("govuk-error-message");
                $maxInfo.hide();

                $invalidInfo.removeClass("govuk-error-message");
                $invalidInfo.hide();
                $(".mce-container").removeClass("text-error");
                $(".mce-container").closest(".govuk-form-group").removeClass("govuk-form-group--error");

                validStates.push(true);
                }
            }

                 // email
                if (!$.requiredValidate($email.val())) {
                    $email.govUkInput("invalidState", $email.attr("val-required-message"));
                     var emailErrorHashLinks = $email.govUkInput("getErrorHashLinks");
                    $errorSummary.govUkErrorSummary("add", emailErrorHashLinks);
                    $errorSummary.govUkErrorSummary("show");
                    validStates.push(false);
                } else if (
                    !$.regexValidate({ regex: $email.attr("val-regex") }, $email.val())) {
                    $email.govUkInput("invalidState", $email.attr("val-regex-message"));
                    var emailErrorHashLinks = $email.govUkInput("getErrorHashLinks");
                    $errorSummary.govUkErrorSummary("add", emailErrorHashLinks);
                    $errorSummary.govUkErrorSummary("show");
                    validStates.push(false);
                } else if (
                    !$.maxLengthValidate({ max: $email.attr("val-max-length") }, $email.val())) {
                    $email.govUkInput("invalidState", $email.attr("val-max-length-message"));
                    var emailErrorHashLinks = $email.govUkInput("getErrorHashLinks");
                    $errorSummary.govUkErrorSummary("add", emailErrorHashLinks);
                    $errorSummary.govUkErrorSummary("show");
                    validStates.push(false);
                } else {
                    $email.govUkInput("validState");
                    $errorSummary.govUkErrorSummary("removeErrorHashLinksFor", $email[0].id);
                    $errorSummary.govUkErrorSummary("hideIfEmpty")
                    validStates.push(true);
                }

                  var enteredWebsite = $website.val();
                var websiteToValidate = "";
                if ($website.val().indexOf("http")>=0) {
                    websiteToValidate = enteredWebsite.substring(enteredWebsite.indexOf("//") + 2, enteredWebsite.length);
                }
                else {
                    websiteToValidate = $website.val();
                }

                 // website (
                 if (!$.regexValidate({ regex: $website.attr("val-regex") }, websiteToValidate)) {
                    $website.govUkInput("invalidState", $website.attr("val-regex-message"));
                    var websiteErrorHashLinks = $website.govUkInput("getErrorHashLinks");
                    $errorSummary.govUkErrorSummary("add", websiteErrorHashLinks);
                    $errorSummary.govUkErrorSummary("show");
                    validStates.push(false);
                } else if (
                    !$.maxLengthValidate({ max: "255" }, websiteToValidate)) {
                    $website.govUkInput("invalidState", $website.attr("val-max-length-message"));
                    var websiteErrorHashLinks = $website.govUkInput("getErrorHashLinks");
                    $errorSummary.govUkErrorSummary("add", websiteErrorHashLinks);
                    $errorSummary.govUkErrorSummary("show");
                    validStates.push(false);
                } else {
                    $website.govUkInput("validState");
                    $errorSummary.govUkErrorSummary("removeErrorHashLinksFor", $website[0].id);
                    $errorSummary.govUkErrorSummary("hideIfEmpty")
                    validStates.push(true);
                }

                  var enteredContactUs = $contactUs.val();
                var contactUsToValidate = "";
                if ($contactUs.val().indexOf("http")>=0) {
                    contactUsToValidate = enteredContactUs.substring(enteredContactUs.indexOf("//") + 2, enteredContactUs.length);
                }
                else {
                    contactUsToValidate = $contactUs.val();
                }

                 // contact us (
                 if (!$.regexValidate({ regex: $contactUs.attr("val-regex") }, contactUsToValidate)) {
                    $contactUs.govUkInput("invalidState", $contactUs.attr("val-regex-message"));
                    var contactUsErrorHashLinks = $contactUs.govUkInput("getErrorHashLinks");
                    $errorSummary.govUkErrorSummary("add", contactUsErrorHashLinks);
                    $errorSummary.govUkErrorSummary("show");
                    validStates.push(false);
                 } else if (
                     !$.maxLengthValidate({ max: $contactUs.attr("val-max-length") }, contactUsToValidate)) {
                    $contactUs.govUkInput("invalidState", $contactUs.attr("val-max-length-message"));
                    var contactUsErrorHashLinks = $contactUs.govUkInput("getErrorHashLinks");
                    $errorSummary.govUkErrorSummary("add", contactUsErrorHashLinks);
                    $errorSummary.govUkErrorSummary("show");
                    validStates.push(false);
                } else {
                    $contactUs.govUkInput("validState");
                    $errorSummary.govUkErrorSummary("removeErrorHashLinksFor", $contactUs[0].id);
                    $errorSummary.govUkErrorSummary("hideIfEmpty")
                    validStates.push(true);
                }

                // telephone
                if (!$.requiredValidate($telephone.val())) {
                    $telephone.govUkInput("invalidState", $telephone.attr("val-required-message"));
                     var telephoneErrorHashLinks = $telephone.govUkInput("getErrorHashLinks");
                    $errorSummary.govUkErrorSummary("add", telephoneErrorHashLinks);
                    $errorSummary.govUkErrorSummary("show");
                    validStates.push(false);
                } else if (
                    !$.regexValidate({ regex: $telephone.attr("val-regex") }, $telephone.val())) {
                    $telephone.govUkInput("invalidState", $telephone.attr("val-regex-message"));
                     var telephoneErrorHashLinks = $telephone.govUkInput("getErrorHashLinks");
                    $errorSummary.govUkErrorSummary("add", telephoneErrorHashLinks);
                    $errorSummary.govUkErrorSummary("show");
                    validStates.push(false);
                } else if (
                    !$.minLengthValidate({ min: $telephone.attr("val-min-length") }, $telephone.val())) {
                    $telephone.govUkInput("invalidState", $telephone.attr("val-min-length-message"));
                    var telephoneErrorHashLinks = $telephone.govUkInput("getErrorHashLinks");
                    $errorSummary.govUkErrorSummary("add", telephoneErrorHashLinks);
                    $errorSummary.govUkErrorSummary("show");
                    validStates.push(false);
                } else if (
                    !$.maxLengthValidate({ max: $telephone.attr("val-max-length") }, $telephone.val())) {
                    $telephone.govUkInput("invalidState", $telephone.attr("val-max-length-message"));
                     var telephoneErrorHashLinks = $telephone.govUkInput("getErrorHashLinks");
                    $errorSummary.govUkErrorSummary("add", telephoneErrorHashLinks);
                    $errorSummary.govUkErrorSummary("show");
                    validStates.push(false);
                } else {
                    $telephone.govUkInput("validState");
                    $errorSummary.govUkErrorSummary("removeErrorHashLinksFor", $telephone[0].id);
                    $errorSummary.govUkErrorSummary("hideIfEmpty")
                    validStates.push(true);
                }

            if (!validStates.every(isAllValid)) {
                $("html, body").animate({
                    scrollTop: $errorSummary.offset().top
                }, 600);
                $errorSummary.focus();
            }
            };


            $continue.on("click", function (event) {
                event.preventDefault();
                validate();
                if (validStates.every(isAllValid)) {
                    $("#editApprenticeship").submit();
                }
            });

        });
    })(jQuery);
</script>

