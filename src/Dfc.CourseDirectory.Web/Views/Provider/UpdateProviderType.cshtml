@using Dfc.CourseDirectory.Web.Helpers
@using Dfc.CourseDirectory.Models.Models.Providers
@model Dfc.CourseDirectory.Web.ViewModels.ProviderDetailsAddOrEditViewModel
@{
    Layout = "_Layout_Your_Courses";
}

<a asp-controller="Provider" asp-action="Details" class="govuk-back-link">Back</a>
<form asp-controller="Provider" asp-action="AddOrEditDetails" id="editProviderDetails" onkeypress="return event.keyCode != 13;">
    <main class="govuk-main-wrapper">
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <span class="govuk-caption-xl">Course Directory</span>
                <h1 class="govuk-heading-xl">Provider type settings</h1>
                
                <div class="govuk-form-group">
                    <fieldset class="govuk-fieldset">

                        <div class="govuk-radios" val-required-message="Select Provider Type" id="selectProviderType">
                            <div class="govuk-radios__item">
                                @Html.RadioButtonFor(m => m.ProviderType, ProviderType.Apprenticeship, new { @class = "govuk-radios__input", id = ProviderType.Apprenticeship })
                                <label class="govuk-label govuk-radios__label" for="@ProviderType.Apprenticeship">
                                    @WebHelper.GetEnumDescription(ProviderType.Apprenticeship)
                                </label>
                            </div>
                            <div class="govuk-radios__item">
                                @Html.RadioButtonFor(m => m.ProviderType, ProviderType.Fe, new { @class = "govuk-radios__input", id = ProviderType.Fe })
                                <label class="govuk-label govuk-radios__label" for="@ProviderType.Fe">
                                    @WebHelper.GetEnumDescription(ProviderType.Fe)
                                </label>
                            </div>
                            <div class="govuk-radios__item">
                                @Html.RadioButtonFor(m => m.ProviderType, ProviderType.Both, new { @class = "govuk-radios__input", id = ProviderType.Both })
                                <label class="govuk-label govuk-radios__label" for="@ProviderType.Both">
                                    @WebHelper.GetEnumDescription(ProviderType.Both)
                                </label>
                            </div>

                        </div>
                    </fieldset>
                </div>

                @Html.HiddenFor(m => m.AliasName)
                @Html.HiddenFor(m => m.BriefOverview)

                <ul class="flex-container">
                    <li class="flex-item">
                        <button name="saveButton" type="submit" class="govuk-button" id="save">
                            Save
                        </button>
                    </li>
                    <li class="flex-item" style="padding-top: 15px">

                        @Html.ActionLink("Cancel", "Details", "Provider", new { }, new { @class = "govuk-link" })
                    </li>
                </ul>

            </div>
        </div>
    </main>
</form>

<script>
    (function ($) {
        $(function () {
            var validStates = [];
            var $button = $("#save");

            var $whatDoYouWantToDoNext = $("#selectProviderType").govUkRadios();

            function isAllValid(currentValue) {
                return currentValue === true;
            }

            function validate() {

                validStates = [];

                $whatDoYouWantToDoNext.govUkRadios("validState");

                if ($.requiredValidate($whatDoYouWantToDoNext.find("input[type='radio']:checked").val())) {
                    $whatDoYouWantToDoNext.govUkRadios("validState");
                    validStates.push(true);
                } else {
                    $whatDoYouWantToDoNext.govUkRadios("invalidState", $whatDoYouWantToDoNext.attr("val-required-message"));
                    validStates.push(false);
                }
            }

            $button.on("click", function (event) {
                event.preventDefault();
                validate();
                if (validStates.every(isAllValid)) {
                    $("#editProviderDetails").submit();
                }
            });

        });
    })(jQuery);
</script>


