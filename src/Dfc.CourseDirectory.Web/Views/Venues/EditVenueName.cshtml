@using Dfc.CourseDirectory.Web.ViewComponents.VenueName
@model Dfc.CourseDirectory.Web.ViewComponents.EditVenueName.EditVenueNameModel

@{
    Layout = "_Layout_Your_Courses";
}
<div class="govuk-grid-row">

    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-l">Edit venue name</h1>
        <form method="post" id="edit-venue-form" asp-controller="Venues" asp-action="VenueAddressSelectionConfirmation">
            @Html.HiddenFor(x => x.Address)
            @Html.HiddenFor(x => x.PostcodeId)
            @Html.HiddenFor(x => x.Id)
            @await Component.InvokeAsync(nameof(VenueName), new VenueNameModel
            {
            LabelText = "Venue name",
            AriaDescribedBy = "Please enter the venue name."
            })

            <div class="govuk-form-group">
                <button class="govuk-button" type="submit" id="editVenueNameSubmit">
                    Continue
                </button>
                @Html.ActionLink("Cancel", "EditVenue", "Venues", new { Model.Id }, new { @class = "govuk-link cd-cancel-link" })
            </div>


        </form>
    </div>
</div>
<script>
    (function ($) {
        $(function () {
            $("#findAddress").focus();

            var $venueName = $("#@nameof(Model.VenueName)").govUkInput();

            var validStates = [];
            var $continueButton = $("#VenueAddressSelectionConfirmation");

            function isAllValid(currentValue) {
                        return currentValue === true;
            }

            function validateVenueName() {

                $venueName.govUkInput("validState");

                if (!$.requiredValidate($venueName.val())) {
                    $venueName.govUkInput("invalidState", $venueName.attr("val-required-message"));
                    validStates.push(false);
                } else if (
                    !$.regexValidate({ regex: $venueName.attr("val-regex") }, $venueName.val())) {
                    $venueName.govUkInput("invalidState", $venueName.attr("val-regex-message"));
                    validStates.push(false);
                } else if (
                    !$.maxLengthValidate({ max: $venueName.attr("val-max-length") }, $venueName.val())) {
                    $venueName.govUkInput("invalidState", $venueName.attr("val-max-length-message"));
                    validStates.push(false);
                } else {
                    $venueName.govUkInput("validState");
                    validStates.push(true);
                }

            }



            $(document).on('click','#editVenueNameSubmit',function(e){
                e.preventDefault();
                    validStates = [];
                    validateVenueName();
                    if (validStates.every(isAllValid)) {
                        $("#edit-venue-form").submit();
                    }

            });






        });
    })(jQuery);
</script>
