@using Dfc.CourseDirectory.Web.ViewComponents.VenueName
@using Dfc.CourseDirectory.Web.ViewComponents.ManualAddress
@model Dfc.CourseDirectory.Web.ViewModels.VenueAddressSelectionConfirmationViewModel

@{
    Layout = "_Layout_Your_Courses";
}

<div class="govuk-grid-row">

    <div class="govuk-grid-column-two-thirds">
        @{
            if (Model.Id != null)
            {
                <h1 class="govuk-heading-l" style="padding-top: 20px;">
                    Edit venue
                </h1>
            }
            else
            {
                <h1 class="govuk-heading-l" style="padding-top: 20px;">
                    Add venue
                </h1>
            }
        }

        <form asp-controller="Venues" asp-action="VenueAddressManualConfirmation" id="ManualAddVenueForm" method="post">


            @await Component.InvokeAsync(nameof(VenueName), new VenueNameModel
            {
                LabelText = "Venue name",
                AriaDescribedBy = "Please enter the venue name."
            })

            @await Component.InvokeAsync(nameof(ManualAddress), new ManualAddressModel
            {
                Id = @Model.Id,
                AddressLine1LabelText = "Address line 1",
                AddressLine1AriaDescribedBy = "Please enter address line 1.",
                AddressLine2LabelText = "Address line 2",
                AddressLine2AriaDescribedBy = "Please enter address line 2.",
                TownOrCityLabelText = "Town or city",
                TownOrCityAriaDescribedBy = "Please enter the town or city.",
                CountyLabelText = "County",
                CountyAriaDescribedBy = "Please enter the county.",
                PostcodeLabelText = "Postcode",
                PostcodeAriaDescribedBy = "Please enter the postcode.",
            })
            <div class="govuk-form-group">
                <button type="submit" class="govuk-button" id="ManualAddressContinue">
                    Continue
                </button>
                @Html.ActionLink("Cancel", "AddVenue", "Venues", null, new { @class = "govuk-link cd-cancel-link" })
            </div>
        </form>
    </div>
</div>

<script>
    (function ($) {
        $(function () {
            var $venueName = $("#@nameof(Model.VenueName)").govUkInput();
            var $addressLine1 = $("#@nameof(Model.Address.AddressLine1)").govUkInput();
            var $addressLine2 = $("#@nameof(Model.Address.AddressLine2)").govUkInput();
            var $townOrCity = $("#@nameof(Model.Address.TownOrCity)").govUkInput();
            var $county = $("#@nameof(Model.Address.County)").govUkInput();
              var $postCode = $("#@nameof(Model.Address.Postcode)").govUkInput();

            var validStates = [];
            var $continueButton = $("#ManualAddressContinue");

             function isAllValid(currentValue) {
                        return currentValue === true;
            }

             function validate() {

                 $venueName.govUkInput("validState");
                 $addressLine1.govUkInput("validState");

                if (!$.requiredValidate($venueName.val())) {
                    $venueName.govUkInput("invalidState", $venueName.attr("val-required-message"));
                    validStates.push(false);
                } else if (
                    !$.regexValidate({ regex: $venueName.attr("val-regex") }, $venueName.val())) {
                    $venueName.govUkInput("invalidState", $venueName.attr("val-regex-message"));
                    validStates.push(false);
                } else if (
                    !$.maxLengthValidate({ max: $venueName.attr("val-max-length") }, $venueName.val())) {
                    $venueName.govUkInput("invalidState", $venueName.attr("val-max-length-message"));
                    validStates.push(false);
                } else {
                    $venueName.govUkInput("validState");
                    validStates.push(true);
                 }


                  if (!$.requiredValidate($addressLine1.val())) {
                    $addressLine1.govUkInput("invalidState", $addressLine1.attr("val-required-message"));
                    validStates.push(false);
                } else if (
                    !$.regexValidate({ regex: $addressLine1.attr("val-regex") }, $addressLine1.val())) {
                    $addressLine1.govUkInput("invalidState", $addressLine1.attr("val-regex-message"));
                    validStates.push(false);
                } else if (
                    !$.maxLengthValidate({ max: $addressLine1.attr("val-max-length") }, $addressLine1.val())) {
                    $addressLine1.govUkInput("invalidState", $addressLine1.attr("val-max-length-message"));
                    validStates.push(false);
                } else {
                    $addressLine1.govUkInput("validState");
                    validStates.push(true);
                 }


                if (!$.regexValidate({ regex: $addressLine2.attr("val-regex") }, $addressLine2.val())) {
                    $addressLine2.govUkInput("invalidState", $addressLine2.attr("val-regex-message"));
                    validStates.push(false);
                } else if (
                    !$.maxLengthValidate({ max: $addressLine2.attr("val-max-length") }, $addressLine2.val())) {
                    $addressLine2.govUkInput("invalidState", $addressLine2.attr("val-max-length-message"));
                    validStates.push(false);
                } else {
                    $addressLine2.govUkInput("validState");
                    validStates.push(true);
                 }



                   if (!$.requiredValidate($townOrCity.val())) {
                    $townOrCity.govUkInput("invalidState", $townOrCity.attr("val-required-message"));
                    validStates.push(false);
                } else if (
                    !$.regexValidate({ regex: $townOrCity.attr("val-regex") }, $townOrCity.val())) {
                    $townOrCity.govUkInput("invalidState", $townOrCity.attr("val-regex-message"));
                    validStates.push(false);
                } else if (
                    !$.maxLengthValidate({ max: $townOrCity.attr("val-max-length") }, $townOrCity.val())) {
                    $townOrCity.govUkInput("invalidState", $townOrCity.attr("val-max-length-message"));
                    validStates.push(false);
                } else {
                    $townOrCity.govUkInput("validState");
                    validStates.push(true);
                 }



                 if (!$.regexValidate({ regex: $county.attr("val-regex") }, $county.val())) {
                    $county.govUkInput("invalidState", $county.attr("val-regex-message"));
                    validStates.push(false);
                } else if (
                    !$.maxLengthValidate({ max: $county.attr("val-max-length") }, $county.val())) {
                    $county.govUkInput("invalidState", $county.attr("val-max-length-message"));
                    validStates.push(false);
                } else {
                    $county.govUkInput("validState");
                    validStates.push(true);
                 }



                     if (!$.requiredValidate($postCode.val())) {
                    $postCode.govUkInput("invalidState", $postCode.attr("val-required-message"));
                    validStates.push(false);
                } else if (
                    !$.regexValidate({ regex: $postCode.attr("val-regex") }, $postCode.val())) {
                    $postCode.govUkInput("invalidState", $postCode.attr("val-regex-message"));
                    validStates.push(false);
                } else if (
                    !$.maxLengthValidate({ max: $postCode.attr("val-max-length") }, $postCode.val())) {
                    $postCode.govUkInput("invalidState", $postCode.attr("val-max-length-message"));
                    validStates.push(false);
                } else {
                    $postCode.govUkInput("validState");
                    validStates.push(true);
                 }

            }


            $(document).on('click','#ManualAddressContinue',function(e){
                e.preventDefault();
                    validStates = [];
                    validate();
                    if (validStates.every(isAllValid)) {
                        $("#ManualAddVenueForm").submit();
                    }

            });
        });
    })(jQuery);
</script>
