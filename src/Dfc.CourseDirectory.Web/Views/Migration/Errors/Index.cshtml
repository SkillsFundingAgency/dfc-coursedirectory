@using Dfc.CourseDirectory.Models.Enums
@using Dfc.CourseDirectory.Web.Helpers
@{
    ViewData["Title"] = "What do you want to do next?"; 
    Layout = "_Layout_Your_Courses";
}

@model Dfc.CourseDirectory.Web.ViewModels.Migration.ErrorsViewModel


<div class="content-container">
    <div class="govuk-grid-row" data-sf-element="Row">
        <div class="govuk-grid-column-two-thirds">

            <form class="govuk-!-margin-bottom-9" id="WhatDoYouWantToDoNextForm" asp-controller="Migration" asp-action="Errors" method="post">
                <span class="govuk-caption-xl">Course directory</span>
                <div id="errorsummary" class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary" style="display: none;">
                    <h2 class="govuk-error-summary__title" id="error-summary-title">
                        There is a problem
                    </h2>
                    <div class="govuk-error-summary__body">
                        <ul class="govuk-list govuk-error-summary__list"></ul>
                    </div>
                </div>
                <h1 class="govuk-heading-l">What do you want to do next?</h1>
                @if (Model.Errors.HasValue && Model.LiveCourses.HasValue)
                {
                    <p>You have @Model.LiveCourses published course@(@Model.LiveCourses > 1 ? "s" : "") and @Model.Errors course@(Model.Errors > 1 ? "s" : "") with errors that must be fixed. <br /> Any courses with a missing LARS have been deleted.</p>
                }
                <br />
                <div class="govuk-form-group">
                    <fieldset class="govuk-fieldset">

                        <div class="govuk-radios" val-required-message="Select 'What do you want to do next?'" id="WhatDoYouWantToDoNext">
                            <div class="govuk-radios__item">
                                @Html.RadioButtonFor(m => m.MigrationErrors, MigrationErrors.FixErrors, new { @class = "govuk-radios__input", id = MigrationErrors.FixErrors })
                                <label class="govuk-label govuk-radios__label" for="@MigrationErrors.FixErrors">
                                    @WebHelper.GetEnumDescription(MigrationErrors.FixErrors)
                                    <span class="govuk-hint"> @WebHelper.GetEnumSubtext(MigrationErrors.FixErrors)</span>
                                </label>
                            </div>
                            <div class="govuk-radios__item">
                                @Html.RadioButtonFor(m => m.MigrationErrors, MigrationErrors.DeleteCourses, new { @class = "govuk-radios__input", id = MigrationErrors.DeleteCourses })
                                <label class="govuk-label govuk-radios__label" for="@MigrationErrors.DeleteCourses">
                                    @WebHelper.GetEnumDescription(MigrationErrors.DeleteCourses)
                                    <span class="govuk-hint"> @WebHelper.GetEnumSubtext(MigrationErrors.DeleteCourses)</span>
                                </label>
                            </div>
                            <div class="govuk-radios__item">
                                @Html.RadioButtonFor(m => m.MigrationErrors, MigrationErrors.StartAgain, new { @class = "govuk-radios__input", id = MigrationErrors.StartAgain })
                                <label class="govuk-label govuk-radios__label" for="@MigrationErrors.StartAgain">
                                    @WebHelper.GetEnumDescription(MigrationErrors.StartAgain)
                                    <span class="govuk-hint"> @WebHelper.GetEnumSubtext(MigrationErrors.StartAgain)</span>
                                </label>
                            </div>

                        </div>
                    </fieldset>
                </div>
                <br />

                <button type="submit" class="govuk-button" id="next">Continue</button>
            </form>
    </div>
</div>
</div>

<<script>
     (function ($) {
         $(function () {
             var validStates = [];
             var $button = $("#next");
             var $errorSummary = $("#errorsummary").govUkErrorSummary();

             var $whatDoYouWantToDoNext = $("#WhatDoYouWantToDoNext").govUkRadios();

             function isAllValid(currentValue) {
                 return currentValue === true;
             }

             function validate() {

                 validStates = [];
                 $errorSummary.govUkErrorSummary("removeAll");
                 $whatDoYouWantToDoNext.govUkRadios("validState");

                 if ($.requiredValidate($whatDoYouWantToDoNext.find("input[type='radio']:checked").val())) {
                     $whatDoYouWantToDoNext.govUkRadios("validState");
                     validStates.push(true);
                  
                 } else {
                     $whatDoYouWantToDoNext.govUkRadios("invalidState", $whatDoYouWantToDoNext.attr("val-required-message"));
                     validStates.push(false);
                     var element = $whatDoYouWantToDoNext;
                     var $anchor = document.createElement("a");
                     $anchor.href =  "#WhatDoYouWantToDoNext";
                     $anchor.innerHTML = $whatDoYouWantToDoNext.attr("val-required-message");
                     $anchor.id = "error-hash-link-" + "a" + "-" + 1;
                     $errorSummary.govUkErrorSummary("add", $anchor);
                     $errorSummary.govUkErrorSummary("show");
                 }
             }

             $button.on("click", function (event) {
                 event.preventDefault();
                 validate();
                 if (validStates.every(isAllValid)) {
                     $("#WhatDoYouWantToDoNextForm").submit();
                 }
             });

         });
     })(jQuery);
 </script>
