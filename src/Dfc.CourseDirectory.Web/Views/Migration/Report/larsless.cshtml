@using System.Text.RegularExpressions
@using Dfc.CourseDirectory.Models.Enums
@using Microsoft.AspNetCore.Authorization;
@using Dfc.CourseDirectory.Models.Models.Courses
@using Dfc.CourseDirectory.Web.Helpers
@using Microsoft.Azure.Search.Common
@model Dfc.CourseDirectory.Web.ViewModels.Migration.LarslessViewModel

@inject IAuthorizationService Authorization
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Courses not transferred to the new directory"; 
    Layout = "_Layout_Your_Courses";
}
@Html.ActionLink("Back","Report","Migration", null ,new { @class = "govuk-back-link" })
<div class="govuk-grid-row govuk-body">
    <main class="govuk-grid-column-full">
        <h1 class="govuk-heading-l">Courses not transferred to the new directory</h1>
        <p class="govuk-!-margin-bottom-6">
            We have not been able to transfer these courses to the new directory because they had either no LARS/QAN in the old directory or because they had one that was not genuine.
        </p>
        <p>
            If you still run these courses you will need to @Html.ActionLink("publish them to the new course directory.","Index", "RegulatedQualification",null, new{@class="govuk-link"})
            <br>
            <br>
        </p>


        @foreach (var course in Model.LarslessCourses)
        {
            foreach (var courseRun in course.CourseRuns.OrderBy(x => x.CourseName))
            {
                <div class="cd-activity-item ">
                    <div class="cd-activity-item-title">
                        <h3 class="govuk-heading-s cd-activity-item-heading ">@courseRun.CourseName</h3>
                    </div>
                    <span class="cd-activity-item-tag">@courseRun.ProviderCourseID</span>
                    @if (courseRun.VenueId != null && Model.Venues.ContainsKey((Guid)courseRun.VenueId))
                    {
                        <span class="cd-activity-item-tag">@(Model.Venues[(Guid)courseRun.VenueId] != null ? Model.Venues[(Guid)courseRun.VenueId] : "Unknown")</span>
                    }
                    else
                    {
                        <span class="cd-activity-item-tag">&nbsp;</span>
                    }

                    @if (courseRun.StudyMode != StudyMode.Undefined)
                    {

                        <span class="cd-activity-item-tag">@courseRun.StudyMode.ToDescription()</span>

                    }
                    else
                    {
                        <span class="cd-activity-item-tag">&nbsp;</span>
                    }

                    @if (courseRun.StartDate.HasValue)
                    {
                        <span class="cd-activity-item-tag">@courseRun.StartDate.Value.ToString("dd'/'MM'/'yyyy")</span>
                    }
                    else if (courseRun.FlexibleStartDate)
                    {
                        <span class="cd-activity-item-tag">Flexible Start Date</span>

                    }
                    else
                    {
                        <span class="cd-activity-item-tag">&nbsp;</span>
                    }
                    <span id="migration-error" class="govuk-error-message">
                        <span class="govuk-visually-hidden">Error:</span> Add a LARS/QAN or Update to a genuine LARS/QAN
                    </span>
                </div>
            }
        }
    </main>
</div>


