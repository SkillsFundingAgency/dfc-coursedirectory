@using System.Text.RegularExpressions
@using Dfc.CourseDirectory.Models.Enums
@using Microsoft.AspNetCore.Authorization;
@using Dfc.CourseDirectory.Models.Models.Courses
@using Dfc.CourseDirectory.Web.Helpers
@using Microsoft.Azure.Search.Common
@model Dfc.CourseDirectory.Web.ViewModels.Migration.LarslessViewModel

@inject IAuthorizationService Authorization
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "_Layout_Your_Courses";
}
<div class="govuk-body cd-file-upload">
    <div class="govuk-form-group">
        <span class="govuk-caption-l">Course Directory</span>
        <h1 class="govuk-govuk-grid-column-one-half-l govuk-heading-l">Courses with no or expired LARS/QAN numbers</h1>
    </div>
    <h3 class="govuk-heading-s">These have no or an expired LARS/QAN</h3>
    <p>If you still run these courses you will need to publish them to the new course directory.</p>

    <div class="err-top-line"></div>
    @foreach (var course in Model.LarslessCourses)
    {
        foreach (var courseRun in course.CourseRuns.OrderBy(x => x.CourseName))
        {
<div id="courserunid" style="display: none">@courseRun.id</div>
            <div class="error-line" id="@($"CourseRunId_{courseRun.id}")">

                <div class="govuk-grid-column-full col">
                    <div class="govuk-form-group--error">
                        <strong>@courseRun.CourseName</strong>
                        <br />
                        <div class="govuk-grid-row">
                            <div class="govuk-grid-column-one-quarter word-wrap-break ">
                                <span>@courseRun.ProviderCourseID</span>
                            </div>
                            <div class="govuk-grid-column-one-quarter">
                                @if (courseRun.VenueId != null && Model.Venues.ContainsKey((Guid)courseRun.VenueId))
                                {
                                    <span>@(Model.Venues[(Guid)courseRun.VenueId] != null ? Model.Venues[(Guid)courseRun.VenueId] : "Unknown")</span>
                                }
                                else
                                {
                                    <span>&nbsp;</span>
                                }
                            </div>
                            <div class="govuk-grid-column-one-quarter">
                                @if (courseRun.StudyMode != StudyMode.Undefined)
                                {

                                    <span>@courseRun.StudyMode.ToDescription()</span>

                                }
                                else
                                {
                                    <span>&nbsp;</span>
                                }
                            </div>

                            <div class="govuk-grid-column-one-quarter">
                                @if (courseRun.StartDate.HasValue)
                                {
                                    <span>@courseRun.StartDate.Value.ToString("dd'/'MM'/'yyyy")</span>
                                }
                                else if (courseRun.FlexibleStartDate)
                                {
                                    <span>Flexible Start Date</span>
                                }
                                else
                                {
                                    <span>&nbsp;</span>
                                }

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        }
    }
</div>
