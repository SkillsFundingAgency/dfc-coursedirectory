
@using Dfc.CourseDirectory.Web.ViewComponents.Courses.CourseFor
@using Dfc.CourseDirectory.Web.ViewComponents.Courses.EntryRequirements
@using Dfc.CourseDirectory.Web.ViewComponents.Courses.FundingOptions
@using Dfc.CourseDirectory.Web.ViewComponents.Courses.HowAssessed
@using Dfc.CourseDirectory.Web.ViewComponents.Courses.HowYouWillLearn
@using Dfc.CourseDirectory.Web.ViewComponents.Courses.WhatWillLearn
@using Dfc.CourseDirectory.Web.ViewComponents.Courses.WhatYouNeed
@using Dfc.CourseDirectory.Web.ViewComponents.Courses.WhereNext
@using Dfc.CourseDirectory.Web.ViewComponents.Notification

@model Dfc.CourseDirectory.Web.ViewModels.EditCourse.EditCourseViewModel

<form asp-controller="EditCourse" asp-action="Index" method="post" id="editCourse">

    @Html.HiddenFor(x => x.CourseId)

    <h1 class="govuk-heading-l" style="padding-top: 20px;">
        Edit Course
    </h1>

    <h3 class="govuk-heading-m">Course description</h3>

    <div id="sectionCourseFor">
        @await Component.InvokeAsync(nameof(CourseFor), Model.CourseFor)
    </div>
    <div id="sectionEntryRequirements">
        @await Component.InvokeAsync(nameof(EntryRequirements), Model.EntryRequirements)
    </div>
    <div id="sectionWhatWillLearn">
        @await Component.InvokeAsync(nameof(WhatWillLearn), Model.WhatWillLearn)
    </div>
    <div id="sectionHowYouWillLearn">
        @await Component.InvokeAsync(nameof(HowYouWillLearn), Model.HowYouWillLearn)
    </div>
    <div id="sectionWhatYouNeed">
        @await Component.InvokeAsync(nameof(WhatYouNeed), Model.WhatYouNeed)
    </div>
    <div id="sectionHowAssessed">
        @await Component.InvokeAsync(nameof(HowAssessed), Model.HowAssessed)
    </div>
    <div id="sectionWhereNext">
        @await Component.InvokeAsync(nameof(WhereNext), Model.WhereNext)
    </div>

    <div id="sectionFundingOptions">
        @await Component.InvokeAsync(nameof(FundingOptions), new FundingOptionsModel()
        {
            AdvancedLearnerLoan = Model.AdvancedLearnerLoan.Value,
            AdultEducationBudget = Model.AdultEducationBudget.Value,
        FundingOptionsHintText="",
        FundingOptionsLabelText ="Funding options",
        FundingOptionsAriaDescribedBy =""

        })
    </div>

    <div class="govuk-form-group">
        <button type="submit" class="govuk-button" id="save">
            Save
        </button>
        @Html.ActionLink("Cancel", "Courses", "Provider", new { qualificationType = @Model.QualificationType }, new { @class = "govuk-link" })
    </div>

</form>

<script>
    (function ($) {
        $(function () {
            var $save = $("#save");
            $save.on("click", function (e) {
                var $courseFor = $("#@nameof(Model.CourseFor)");
                $courseFor.trigger("blur");
                var $entryRequirements = $("#@nameof(Model.EntryRequirements)");
                $entryRequirements.trigger("blur");
                var $whatWillLearn = $("#@nameof(Model.WhatWillLearn)");
                $whatWillLearn.trigger("blur");
                var $howYouWillLearn = $("#@nameof(Model.HowYouWillLearn)");
                $howYouWillLearn.trigger("blur");
                var whatYouNeed = $("#@nameof(Model.WhatYouNeed)");
                whatYouNeed.trigger("blur");
                var howAssessed = $("#@nameof(Model.HowAssessed)");
                whatYouNeed.trigger("blur");
                var whereNext = $("#@nameof(Model.WhereNext)");
                whereNext.trigger("blur");
            });

        });
    })(jQuery);
</script>
