@using Dfc.CourseDirectory.Web.ViewComponents.PublishCourses.PublishCourse
@using Dfc.CourseDirectory.Models.Enums
@model Dfc.CourseDirectory.Web.ViewModels.PublishCourses.PublishViewModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<div class="govuk-body cd-file-upload">
    @if (Model.PublishMode.Equals(PublishMode.BulkUpload))
    {
        if (Model.AreAllReadyToBePublished)
        {
            <h1 class="govuk-govuk-grid-column-one-half-l">Publish Your Courses</h1>
            <p>
                Your file of @Model.NumberOfCoursesInFiles @(Model.NumberOfCoursesInFiles.Equals(1) ? "course" : "courses") has no errors. Publish @(Model.NumberOfCoursesInFiles.Equals(1) ? "it" : "them") to replace your current courses on the course directory.
            </p>
        }
        else
        {
            <h1 class="govuk-govuk-grid-column-one-half-l">Fix errors and publish</h1>
            <p>
                @if (Model.NumberOfCoursesInFiles.Equals(1))
                {
                    <text>Your file of @Model.NumberOfCoursesInFiles course has been uploaded. It will not be listed on the course directory until you publish it. You must fix any errors first.</text>
                }
                else
                {
                    <text>Your file of @Model.NumberOfCoursesInFiles courses has been uploaded. They will not be listed on the course directory until you publish them. You must fix any errors first.</text>
                }
            </p>
        }
    }

    @if (Model.PublishMode.Equals(PublishMode.Migration))
    {
        if (Model.AreAllReadyToBePublished)
        {
            <h1 class="govuk-govuk-grid-column-one-half-l">Publish your courses</h1>
            <p>
                @(Model.NumberOfCoursesInFiles.Equals(1) ? "This course has" : "These courses have") no errors but will not be listed on the course directory until you publish @(Model.NumberOfCoursesInFiles.Equals(1) ? "it" : "them").
            </p>
        }
        else if (@Model.NumberOfCoursesInFiles > 0)
        {
            <h1 class="govuk-govuk-grid-column-one-half-l">Fix errors and publish</h1>
            <p>

                It has not been possible to migrate @Model.NumberOfCoursesInFiles of your courses from the old Course Directory to new Course Directory. @(Model.NumberOfCoursesInFiles.Equals(1) ? "This course" : "These courses") cannot be listed on the new Course Directory until you fix the errors.

            </p>
        }
        else
        {
            <h1 class="govuk-govuk-grid-column-one-half-l">No Courses to Migrate</h1>
        }
    }
    @if (Model.PublishMode.Equals(PublishMode.DataQualityIndicator))
    {
        var courseRunCount = Model.Courses.SelectMany(x => x.CourseRuns).Count();
        <h1 class="govuk-govuk-grid-column-one-half-l">@courseRunCount courses need their start date updating</h1>
    }
    <div class="err-top-line"></div>
    @await Component.InvokeAsync(nameof(PublishCourse), new { model = Model })
</div>
