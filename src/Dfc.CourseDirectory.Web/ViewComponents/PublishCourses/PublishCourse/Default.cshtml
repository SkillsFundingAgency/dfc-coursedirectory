@using System.Text.RegularExpressions
@using Dfc.CourseDirectory.Models.Enums
@using Dfc.CourseDirectory.Models.Models.Courses
@using Dfc.CourseDirectory.Web.Helpers
@model Dfc.CourseDirectory.Web.ViewModels.PublishCourses.PublishViewModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@Html.HiddenFor(x => x.PublishMode)


@foreach (var course in Model.Courses)
{
    if (!course.IsValid)
    {
        <div class="error-line" id="CourseId_@course.id">
            <div class="govuk-grid-column-two-thirds m100 col">
                <div class="govuk-form-group--error">
                    <strong>@course.QualificationCourseTitle</strong>
                    <br />LEVEL: @course.NotionalNVQLevelv2, @course.AwardOrgCode, Lars: @course.LearnAimRef

                    @foreach (var error in course.ValidationErrors)
                    {
                        <span class="govuk-error-message">@error</span>
                    }
                </div>



            </div>
            <div id="courseid" style="display:none">@course.id</div>
            <div class="govuk-grid-column-one-third">
                <div class="align-right col right center">
                    <a id="course-fix-@course.id" class="error-link" asp-controller="EditCourse" asp-action="Index" style="display:block"
                       asp-route-courseId="@course.id"
                       asp-route-learnAimRef="@course.LearnAimRef"
                       asp-route-notionalNVQLevelv2="course.NotionalNVQLevelv2"
                       asp-route-awardOrgCode="@course.AwardOrgCode"
                       asp-route-learnAimRefTitle="@course.QualificationCourseTitle"
                       asp-route-learnAimRefTypeDesc="@course.QualificationType"
                       asp-route-mode=@Model.PublishMode>Fix</a>
                </div>
            </div>
        </div>
    }


    foreach (var courseRun in course.CourseRuns.OrderBy(x => x.CourseName))
    {
        @if ((Model.PublishMode.Equals(PublishMode.BulkUpload) && courseRun.RecordStatus == RecordStatus.BulkUploadPending) ||
(Model.PublishMode.Equals(PublishMode.Migration) && courseRun.RecordStatus == RecordStatus.MigrationPending))
        {
            <div id="courserunid" style="display:none">@courseRun.id</div>

            <div class="error-line" id="CourseRunId_@courseRun.id">

                <div class="govuk-grid-column-two-thirds m100 col">
                    <div class="govuk-form-group--error">
                        <strong>@courseRun.CourseName</strong>
                        <br />
                        <div class="govuk-grid-row">
                            <div class="govuk-grid-column-one-quarter">
                                <span>@courseRun.CourseInstanceId</span>
                            </div>
                            <div class="govuk-grid-column-one-quarter">
                                @if (courseRun.VenueId != null)
                                {
                                    <span>@Model.Venues[(Guid)courseRun.VenueId]</span>
                                }
                                else
                                {
                                    <span>&nbsp;</span>
                                }

                            </div>
                            <div class="govuk-grid-column-one-quarter">
                                @if (courseRun.StudyMode == StudyMode.Undefined)
                                {
                                    <span>&nbsp;</span>
                                }
                                else
                                {
                                    <span>@courseRun.StudyMode.ToDescription()</span>
                                }

                            </div>
                            <div class="govuk-grid-column-one-quarter">
                                @if (courseRun.StartDate.HasValue)
                                {
                                    <span>@courseRun.StartDate.Value.ToString("dd'/'MM'/'yyyy")</span>
                                }
                                else if (courseRun.FlexibleStartDate)
                                {
                                    <span>Flexible Start Date</span>
                                }
                                else
                                {
                                    <span>&nbsp;</span>
                                }

                            </div>
                        </div>
                        @foreach (var error in courseRun.ValidationErrors)
                        {
                            <span class="govuk-error-message">@error</span>
                        }
                    </div>
                    

                </div>
                <div class="govuk-grid-column-one-third">
                    <div class="align-right col right center">

                        <a id="course-run-fix-@courseRun.id" class="error-link fix" asp-controller="EditCourseRun" asp-action="Index"
                           asp-route-courseId="@course.id" asp-route-courseRunId="@courseRun.id"
                           asp-route-learnAimRef="@course.LearnAimRef"
                           asp-route-notionalNVQLevelv2="course.NotionalNVQLevelv2"
                           asp-route-awardOrgCode="@course.AwardOrgCode"
                           asp-route-learnAimRefTitle="@course.QualificationCourseTitle"
                           asp-route-learnAimRefTypeDesc="@course.QualificationType"
                           asp-route-mode=@Model.PublishMode>Fix</a>
                    </div>
                </div>
            </div>
        }
        else
        {
            if (Model.PublishMode == PublishMode.DataQualityIndicator)
            {
                <div id="courserunid" style="display:none">@courseRun.id</div>

                <div class="error-line" id="CourseRunId_@courseRun.id">
                    <div class="govuk-grid-column-two-thirds col">@courseRun.CourseName</div>
                    <div class="govuk-grid-column-one-third">
                        <div class="govuk-grid-column-two-thirds align-right col right center">
                            <a id="course-run-fix-@courseRun.id" class="error-link fix" asp-controller="EditCourseRun" asp-action="Index"
                               asp-route-courseId="@course.id" asp-route-courseRunId="@courseRun.id"
                               asp-route-learnAimRef="@course.LearnAimRef"
                               asp-route-notionalNVQLevelv2="course.NotionalNVQLevelv2"
                               asp-route-awardOrgCode="@course.AwardOrgCode"
                               asp-route-learnAimRefTitle="@course.QualificationCourseTitle"
                               asp-route-learnAimRefTypeDesc="@course.QualificationType"
                               asp-route-mode=@Model.PublishMode>Fix</a>
                        </div>
                    </div>
                </div>
            }

        }
    }
}
