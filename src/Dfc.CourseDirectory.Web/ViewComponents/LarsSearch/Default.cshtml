@using Dfc.CourseDirectory.Web.ViewComponents.LarsSearchResult;

@model Dfc.CourseDirectory.Web.ViewComponents.LarsSearch.LarsSearchModel;

<div class="lars-search cd-hero-search">


    <div id="LarsSearchResultContainer" class="">
        @await Component.InvokeAsync(nameof(LarsSearchResult))
    </div>
</div>

<script>
    (function ($) {
        $(function () {

            var validStates = [];
            var $errorSummary = $("#errorsummary").govUkErrorSummary();
            var $lars = $("#LarsSearchTerm").govUkInput();

            var debounce = function (cb, delay) {
                var inDebounce;
                return function () {
                    var context = this;
                    var args = arguments;
                    clearTimeout(inDebounce);
                    inDebounce = setTimeout(function () {
                        cb.apply(context, args);
                    },
                        delay);
                };
            };

            var isNullOrWhitespace = function (input) {
                if (typeof input === 'undefined' || input == null) return true;
                return input.replace(/\s/g, '').length < 3;
            }

            var replaceAll = function (search, find, replace) {
                return search.split(find).join(replace);
            };

            var makeRequestWithPayload = function (payload, success) {
                console.log(payload);
                var qs = $.param(payload);
                qs = replaceAll(qs, "%5B%5D", "");
                $.get("/LarsSearch?" + qs, success);
            };

            var makeRequestWithUrl = function (url, success) {
                console.log(url);
                $.get(url, success);
            };

            var removeSearchResults = function () {
                var $larsSearchResultContainer = $("#LarsSearchResultContainer");
                $larsSearchResultContainer.html("");
            };

            var replaceSearchResult = function (searchResults) {
                var $larsSearchResultContainer = $("#LarsSearchResultContainer");
                $larsSearchResultContainer.html("");
                $larsSearchResultContainer.html(searchResults);
            };

            var $larsSearchTerm = $("#LarsSearchTerm");
            var $buttonSearch = $("#searchQualification");

            var doSearch = function () {


                if (isNullOrWhitespace($larsSearchTerm.val())) {
                    removeSearchResults();
                } else {
                    var $allCheckedNotionalNvqLevelV2FilterCheckboxes =
                        $("input[name='NotionalNVQLevelv2Filter']:checkbox:checked");
                    var $allCheckedAwardOrgCodeFilterCheckboxes =
                        $("input[name='AwardOrgCodeFilter']:checkbox:checked");
                    var $allSectorSubjectAreaTier1FilterCheckboxes =
                        $("input[name='SectorSubjectAreaTier1Filter']:checkbox:checked");
                    var $allSectorSubjectAreaTier2FilterCheckboxes =
                        $("input[name='SectorSubjectAreaTier2Filter']:checkbox:checked");

                    makeRequestWithPayload({
                        SearchTerm: $larsSearchTerm.val(),
                        NotionalNVQLevelv2Filter: $allCheckedNotionalNvqLevelV2FilterCheckboxes.map(function () {
                            return $(this).val();
                        }).get(),
                        AwardOrgCodeFilter: $allCheckedAwardOrgCodeFilterCheckboxes.map(function () {
                            return $(this).val();
                        }).get(),
                        SectorSubjectAreaTier1Filter: $allSectorSubjectAreaTier1FilterCheckboxes.map(function () {
                            return $(this).val();
                        }).get(),
                        SectorSubjectAreaTier2Filter: $allSectorSubjectAreaTier2FilterCheckboxes.map(function () {
                            return $(this).val();
                        }).get()
                    },
                        onSucess);
                }

            };

            var assignEventsToAllCheckboxes = function () {
                var $notionalNvqLevelV2FilterCheckboxes = $("input[name='NotionalNVQLevelv2Filter']:checkbox");
                var $awardOrgCodeFilterCheckboxes = $("input[name='AwardOrgCodeFilter']:checkbox");
                var $sectorSubjectAreaTier1FilterCheckboxes = $("input[name='SectorSubjectAreaTier1Filter']:checkbox");
                var $sectorSubjectAreaTier2FilterCheckboxes = $("input[name='SectorSubjectAreaTier2Filter']:checkbox");

                $notionalNvqLevelV2FilterCheckboxes.on("click", debounce(doSearch, 1500));
                $awardOrgCodeFilterCheckboxes.on("click", debounce(doSearch, 1500));
                $sectorSubjectAreaTier1FilterCheckboxes.on("click", doSearch);
                $sectorSubjectAreaTier2FilterCheckboxes.on("click", doSearch);

                //$("#ApplyFilter").on("click", debounce(doSearch,0));
            };



            var assignEventToClearAllFiltersLink = function () {
                var $clearAllFiltersLink = $("#ClearAllFilters");

                $clearAllFiltersLink.on("click",
                    function (e) {
                        e.preventDefault();
                        var $allCheckedFilterCheckboxes = $(
                            "input[name='NotionalNVQLevelv2Filter']:checkbox:checked, input[name='AwardOrgCodeFilter']:checkbox:checked, input[name='SectorSubjectAreaTier1Filter']:checkbox, input[name='SectorSubjectAreaTier2Filter']:checkbox");
                        var allCheckedFilterCheckboxesLength = $allCheckedFilterCheckboxes.length;

                        for (var i = 0; i < allCheckedFilterCheckboxesLength; i++) {
                            if (i === (allCheckedFilterCheckboxesLength - 1)) {
                                $($allCheckedFilterCheckboxes[i]).trigger("click");
                            } else {
                                $($allCheckedFilterCheckboxes[i]).prop('checked', false);
                            }
                        }
                        doSearch();
                    });
            };

            var assignEventsToLarsSearchPagination = function () {
                var $larsSearchResultPaginationItems = $("#LarsSearchResultContainer .pagination .pagination__item");
                $larsSearchResultPaginationItems.on("click",
                    function (e) {
                        e.preventDefault();
                        var url = $(e.target).attr("href");
                        makeRequestWithUrl(url, onSucess);
                    });
            };

            var onSucess = function (data) {
                replaceSearchResult(data);
                assignEventsToAllCheckboxes();
                assignEventToClearAllFiltersLink();
                assignEventsToLarsSearchPagination();
            };

            //$larsSearchTerm.on("keyup", debounce(doSearch, 100));
            //$buttonSearch.on("click", debounce(doSearch, 100));

            //$(document).keypress(function (e) {
            //    if (e.which === 13) {
            //        e.preventDefault();
            //        $buttonSearch.trigger("click");
            //    }
            //});



            $(document).on('click','#searchQualification',function(e){
                e.preventDefault();
                validStates = [];
                validate();
                if (validStates.every(isAllValid)) {
                    doSearch();
                }

            });


            function isAllValid(currentValue) {
                return currentValue === true;
            }

            function validate() {
                $(".govuk-error-message").remove();
                validStates = [];
                $lars.govUkInput("validState");
                $errorSummary.govUkErrorSummary("removeAll");
                if (!$.requiredValidate($lars.val())) {
                    $lars.govUkInput("invalidState", $lars.attr("val-required-message"));
                    validStates.push(false);
                    var $anchor = document.createElement("a");
                    $anchor.href = "#LarsSearchTerm";
                    $anchor.innerHTML = $lars.attr("val-required-message");
                    $anchor.id = "error-hash-link-" + "a" + "-" + 1;
                    $errorSummary.govUkErrorSummary("add", $anchor);
                    $errorSummary.govUkErrorSummary("show");

                }
                else if (
                    !$.minLengthValidate({ min: $lars.attr("val-min-length") }, $lars.val())) {
                    $lars.govUkInput("invalidState", $lars.attr("val-min-length-message"));
                    validStates.push(false);
                    var $anchor = document.createElement("a");
                    $anchor.href = "#LarsSearchTerm";
                    $anchor.innerHTML = $lars.attr("val-min-length-message");
                    $anchor.id = "error-hash-link-" + "a" + "-" + 1;
                    $errorSummary.govUkErrorSummary("add", $anchor);
                    $errorSummary.govUkErrorSummary("show");

                } else {
                    $lars.govUkInput("validState");
                    $errorSummary.govUkErrorSummary("removeErrorHashLinksFor", $lars[0].id);
                    $errorSummary.govUkErrorSummary("hideIfEmpty")
                    validStates.push(true);
                }

            }


        });





    })(jQuery);
</script>


