@model Dfc.CourseDirectory.Web.ViewComponents.Courses.Cost.CostModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<div id="costContainer" class="govuk-form-group">
    <label id="govuk-label-Cost" class="govuk-label">
        @Model.CostLabelText
    </label>
    @if (!string.IsNullOrWhiteSpace(Model.CostHintText))
    {
        <span class="govuk-hint">
            @Model.CostHintText
        </span>
    }

    @{ var regex = @"^[a-zA-Z0-9 /\n/\r/\¬\!\£\$\%\^\&\*\(\)_\+\-\=\{\}\[\]\;\:\@\'\#\~\,\<\>\.\?\/\|\`" + "\"" + "\\\\]+$"; }

    <span class="govuk-body">£</span>
    <input class="govuk-input govuk-input--width-10" style="display:inline;" asp-for="@Model.Cost" type="text" aria-describedby="@Model.CostAriaDescribedBy"
           val-required-message="Enter cost or cost description">
</div>

<div class="govuk-character-count" data-module="character-count" data-maxlength="255">
    <div class="govuk-form-group">
        <label class="govuk-label" for="word-count">
            @Model.CostDescriptionLabelText
        </label>
        @if (!string.IsNullOrWhiteSpace(Model.CostDescriptionHintText))
        {
            <span class="govuk-hint">
                @Model.CostDescriptionHintText
            </span>
        }
        <textarea class="govuk-textarea js-character-count " asp-for="@Model.CostDescription" rows="5"
                  val-required-message="Enter cost or cost description"
                  val-max-length="255"
                  val-max-length-message="Cost description must be 255 characters or less"
                  val-regex="@regex"
                  val-regex-message="Cost Description contains invalid characters">

        </textarea>
    </div>
</div>

<script>
    (function ($) {
        $(function () {

            var $elementCostDescription = $("#@nameof(Model.CostDescription)");
            var $validationMessageCostDescription = $elementCostDescription.prev("[data-valmsg-for='@nameof(Model.CostDescription)']");
            $validationMessageCostDescription.css("margin-bottom", "0");
            var $elementCost = $("#@nameof(Model.Cost)");
            var $validationMessageCost = $elementCost.prev("[data-valmsg-for='@nameof(Model.Cost)']");
            $validationMessageCost.css("margin-bottom", "0");

            $elementCostDescription.on("blur", function () {

                var trimmed = $elementCostDescription.val().trim();
                $elementCostDescription.val(trimmed);

                var $characterCountValue = $elementCostDescription.attr("val-max-length");
                var $countMessage = $("#CostDescription-info");

                var $actualCharacterCount = $characterCountValue - $elementCostDescription.val().length;

                if ($actualCharacterCount <= 0) {

                } else {

                    if ($actualCharacterCount === 1) {
                        $countMessage.text("You have " + $actualCharacterCount + " character remaining");
                    } else {
                        $countMessage.text("You have " + $actualCharacterCount + " characters remaining");

                        $countMessage.addClass('govuk-hint');
                        $elementCostDescription.removeClass('govuk-textarea--error');
                        $countMessage.removeClass('govuk-error-message');
                        $countMessage.addClass('govuk-character-count__message');
                    }
                }

            });


            $elementCost.on("blur", function () {


                var trimmed = $elementCost.val().trim().replace(",", "");

                if (trimmed !== "") {

                    if ($.isNumeric(trimmed))
                        {
                        var formatted = parseFloat(Math.floor(trimmed * 100) / 100).toFixed(2);
                        $elementCost.val(formatted);


                    }
                    else
                    {
                        $elementCost.val("");
                    }
                }

            });



            $elementCost.on("keypress", function (event) {
                var charCode = event.which ? event.which : event.keyCode;

                if ($elementCost.val().length >= 9) {
                    return false;
                };

                if ((charCode >= 48 && charCode <= 57) || charCode === 46) {
                    return true;
                }

                return false;
            });
        });
    })(jQuery);
</script>