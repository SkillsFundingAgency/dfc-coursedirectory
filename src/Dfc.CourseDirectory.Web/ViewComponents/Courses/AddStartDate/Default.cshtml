@using Dfc.CourseDirectory.Common.Settings
@using Dfc.CourseDirectory.Models.Models.Courses
@using Microsoft.Extensions.Options
@model Dfc.CourseDirectory.Web.ViewComponents.Courses.AddStartDate.AddStartDateModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<fieldset class="govuk-fieldset" aria-describedby="changed-name-hint">

    <div class="govuk-form-group" id="date">
        <label class="govuk-label" for="sub" style="margin-bottom: 15px">
            @Model.LabelText

        </label>
        <span id="more-detail-hint" class="govuk-hint">@Model.SpecifiedDateHintText </span>


        <div class="govuk-radios__item">
            @Html.RadioButtonFor(m => m.StartDateType, StartDateType.SpecifiedStartDate, new { @class = "govuk-radios__input specified", id = @StartDateType.SpecifiedStartDate })
            <label class="govuk-label govuk-radios__label" for="@StartDateType.SpecifiedStartDate">Defined Start Date</label>
        </div>

        <div class="govuk-form-group" id="startDateFormGroup">

            <div class="govuk-date-input" id="start_date"
                 val-required-message="Enter start date"
                 val-past-date-ref=@DateTime.Now.ToString("yyyy-MM-dd")
                 val-past-date-message="Start Date cannot be earlier than today’s date"
                 val-future-date-ref=@DateTime.Now.AddYears(2).ToString("yyyy-MM-dd")
                 val-future-date-message="Start Date cannot be later than 2 years from today’s date"
                 val-date-message="Invalid date">
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        <label class="govuk-label govuk-date-input__label" asp-for="@Model.Day">
                            @Model.DayLabelText
                        </label>
                        <input class="govuk-input govuk-date-input__input govuk-input--width-2" asp-for="@Model.Day" type="number" pattern="[0-9]*" onpaste="return false">
                    </div>
                </div>
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        <label class="govuk-label govuk-date-input__label" asp-for="@Model.Month">
                            @Model.MonthLabelText
                        </label>
                        <input class="govuk-input govuk-date-input__input govuk-input--width-2" asp-for="@Model.Month" type="number" pattern="[0-9]*" onpaste="return false">
                    </div>
                </div>
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        <label class="govuk-label govuk-date-input__label" asp-for="@Model.Year">
                            @Model.YearLabelText
                        </label>
                        <input class="govuk-input govuk-date-input__input govuk-input--width-4" asp-for="@Model.Year" type="number" pattern="[0-9]*" onpaste="return false">
                    </div>
                </div>
            </div>
        </div>

        <div class="govuk-radios__item" style="margin-top: 15px;">
            @Html.RadioButtonFor(m => m.StartDateType, StartDateType.FlexibleStartDate, new { @class = "govuk-radios__input flexible", id = @StartDateType.FlexibleStartDate })
            <label class="govuk-label govuk-radios__label" for="@StartDateType.FlexibleStartDate">Flexible Start Date</label>
        </div>


    </div>

</fieldset>

<script>
    (function($) {
        $(function() {


            @*var $dayElementUrl = $("#@nameof(Model.Day)");

            var $monthElementUrl = $("#@nameof(Model.Month)");

            var $yearElementUrl = $("#@nameof(Model.Year)");



            $dayElementUrl.on("keypress",
                function(event) {
                    var charCode = event.which ? event.which : event.keyCode;

                    if ($dayElementUrl.val().length >= 2) {
                        return false;
                    };

                    if ((charCode >= 48 && charCode <= 57)) {
                        return true;
                    }

                    return false;
                });

            $monthElementUrl.on("keypress",
                function(event) {
                    var charCode = event.which ? event.which : event.keyCode;

                    if ($monthElementUrl.val().length >= 2) {
                        return false;
                    };

                    if ((charCode >= 48 && charCode <= 57)) {
                        return true;
                    }

                    return false;
                });

            $yearElementUrl.on("keypress",
                function(event) {
                    var charCode = event.which ? event.which : event.keyCode;

                    if ($yearElementUrl.val().length >= 4) {
                        return false;
                    };

                    if ((charCode >= 48 && charCode <= 57)) {
                        return true;
                    }

                    return false;
                });*@





        });
    })(jQuery);
</script>

