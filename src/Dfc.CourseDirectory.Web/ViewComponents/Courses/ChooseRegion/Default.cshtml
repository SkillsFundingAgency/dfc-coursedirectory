@using Dfc.CourseDirectory.Models.Models.Courses;
@using Dfc.CourseDirectory.Web.Helpers;
@using Dfc.CourseDirectory.Web.ViewComponents.Extensions
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model Dfc.CourseDirectory.Web.ViewComponents.Courses.ChooseRegion.ChooseRegionModel



@*<div class="govuk-form-group" id="VenueItemsCheckboxList" style="@Model.DeliveryMode.IfNotClassroomBasedDisplayNone()">*@

<label class="govuk-label" for="select-region">
    @Model.Regions.LabelText
</label>
<span id="select-region-hint" class="govuk-hint">
    @Model.Regions.HintText
</span>
<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        @*<div class="govuk-checkboxes" id="SelectRegionCheckBoxes" val-required-message="Select a region">
            @{ var j = 0; }
            @if (Model.Regions.RegionItems.Count() == 1)
            {
                <div class="govuk-checkboxes__item">
                    <input class="govuk-checkboxes__input" id="RegionName-@j" name="SelectedRegions" type="checkbox" value="@Model.Regions.RegionItems.First().Id" checked="checked" onclick="return false;" />
                    <label class="govuk-label govuk-checkboxes__label" for="SelectedRegions">@Model.Regions.RegionItems.First().RegionName</label>
                </div>
            }
            else
            {
                @*foreach (var item in Model.Regions.RegionItems)
                {
                    j++;
                    <div class="govuk-checkboxes__item">
                        <input class="govuk-checkboxes__input" id="RegionName-@j" name="SelectedRegions" type="checkbox" value="@item.Id" @item.Checked.ThenNullableCheck() />
                        <label class="govuk-label govuk-checkboxes__label" for="SelectedRegions">@item.RegionName</label>
                    </div>
                }
            }


        </div>*@

        <div class="govuk-checkboxes" id="SelectRegionCheckBoxes" val-required-message="Select a region">
             @foreach (var item in Model.Regions.RegionItems)
             {
                 <details class="form-group" role="group">

                     <summary role="button">
                         <span id="region+@item.Id" class="summary govuk-label govuk-checkboxes__label">@item.RegionName</span>
                     </summary>

                     <div class="govuk-form-group">
                         <h3><a class="govuk-link" id="SelectAll" region-id="@item.Id" href="#">Select all</a></h3>
                     </div>
                     <div class="flex-container govuk-grid-row" id="details-content-@item.Id" aria-hidden="true">

                         @{ var x = 0; }
                         @foreach (var subregion in item.SubRegion)
                         {
                             x++;

                             <div class="govuk-checkboxes__item">
                                 <input class="govuk-checkboxes__input" id="RegionName-@x" region-id="@item.Id" name="SelectedRegions" type="checkbox" value="@subregion.Id" @subregion.Checked.ThenNullableCheck()/>
                                 <label class="govuk-label govuk-checkboxes__label" for="SelectedRegions">@subregion.SubRegionName</label>
                             </div>

                         }
                     </div>
                 </details>
             }


        </div>

    </div>
</div>
    <script>
        (function ($) {
            $(function () {
                $("a").on("click",
                    function(e) {
                        e.preventDefault();
                        var $regionId = $(this).attr('region-id');

                        if ($regionId) {

                            var $selectAllText = $(this).text();
                            var $allCheckedCheckboxes = $("input[region-id='" + $regionId + "']:checkbox");
                            var allCheckedFilterCheckboxesLength = $allCheckedCheckboxes.length;

                            for (var i = 0; i < allCheckedFilterCheckboxesLength; i++) {
                                if ($selectAllText === "Select all") {
                                    $($allCheckedCheckboxes[i]).prop('checked', true);

                                } else {
                                    $($allCheckedCheckboxes[i]).prop('checked', false);

                                }
                            }

                            if ($selectAllText === "Select all") {
                                $(this).text("Clear all");
                            } else {
                                $(this).text("Select all");
                            }
                        }
                    });
            });
        })(jQuery);
    </script>
