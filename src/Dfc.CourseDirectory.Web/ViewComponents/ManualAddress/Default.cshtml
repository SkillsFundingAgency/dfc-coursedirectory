@model Dfc.CourseDirectory.Web.ViewComponents.ManualAddress.ManualAddressModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{ 
    var addressRegex = @"^[a-zA-Z0-9\.\-']+(?: [a-zA-Z0-9\.\-']+)*$";

    var townOrCountyRegex = @"^[a-zA-Z\.\-']+(?: [a-zA-Z\.\-']+)*$";

    var postcoeRegEx = @"^([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9][A-Za-z]?))))\s?[0-9][A-Za-z]{2})+$";
}

<input asp-for="Id" type="hidden" />.

<div class="govuk-form-group">
    <label class="govuk-label" asp-for="@Model.AddressLine1">
        @Model.AddressLine1LabelText
        <span class="govuk-visually-hidden">line 1 of 2</span>
    </label>
    @if (!string.IsNullOrWhiteSpace(Model.AddressLine1HintText))
    {
        <span class="govuk-hint">
            @Model.AddressLine1HintText
        </span>
    }
    @*<span asp-validation-for="@Model.AddressLine1" class="govuk-error-message"></span>*@
    <input class="govuk-input" asp-for="@Model.AddressLine1" type="text" aria-describedby="@Model.AddressLine1AriaDescribedBy"
           val-required-message="Enter address line 1"
           val-max-length="100"
           val-max-length-message="Address line 1 must be 100 characters or less"
           val-regex="@addressRegex"
           val-regex-message="Address line 1 must only include letters a to z, numbers, hyphens and spaces" />

</div>

<div class="govuk-form-group">
    <label class="govuk-label" asp-for="@Model.AddressLine2">
        @Model.AddressLine2LabelText
        <span class="govuk-visually-hidden">Address line 2 </span>
    </label>
    @if (!string.IsNullOrWhiteSpace(Model.AddressLine2HintText))
    {
        <span class="govuk-hint">
            @Model.AddressLine2HintText
        </span>
    }
    @*<span asp-validation-for="@Model.AddressLine2" class="govuk-error-message"></span>*@
    <input class="govuk-input" asp-for="@Model.AddressLine2" type="text" aria-describedby="@Model.AddressLine2AriaDescribedBy" 
           val-max-length="100"
           val-max-length-message="Address line 2 must be 100 characters or less"
           val-regex="@addressRegex"
           val-regex-message="Address line 2 must only include letters a to z, numbers, hyphens and spaces" />
</div>

<div class="govuk-form-group">
    <label class="govuk-label" asp-for="@Model.TownOrCity">
        @Model.TownOrCityLabelText
    </label>
    @*<span asp-validation-for="@Model.TownOrCity" class="govuk-error-message"></span>*@
    <input class="govuk-input govuk-!-width-two-thirds" asp-for="@Model.TownOrCity" type="text" aria-describedby="@Model.TownOrCityAriaDescribedBy"
             val-required-message="Enter a town or city"
            val-max-length="75"
           val-max-length-message="Town or city must be 75 characters or less"
           val-regex="@townOrCountyRegex"
           val-regex-message="Town or city must only include letters a to z, numbers, hyphens and spaces" />
</div>

<div class="govuk-form-group">
    <label class="govuk-label" asp-for="@Model.County">
        @Model.CountyLabelText
    </label>
    @if (!string.IsNullOrWhiteSpace(Model.CountyHintText))
    {
        <span class="govuk-hint">
            @Model.CountyHintText
        </span>
    }
    @*<span asp-validation-for="@Model.County" class="govuk-error-message"></span>*@
    <input class="govuk-input govuk-!-width-two-thirds" asp-for="@Model.County" type="text" aria-describedby="@Model.CountyAriaDescribedBy"
            val-max-length="75"
           val-max-length-message="County must be 75 characters or lesss"
           val-regex="@townOrCountyRegex"
           val-regex-message="County must only include letters a to z, numbers, hyphens and spaces" />
</div>

<div class="govuk-form-group">
    <label class="govuk-label" asp-for="@Model.Postcode">
        @Model.PostcodeLabelText
    </label>
    @if (!string.IsNullOrWhiteSpace(Model.PostcodeHintText))
    {
        <span class="govuk-hint">
            @Model.PostcodeHintText
        </span>
    }
    @*<span asp-validation-for="@Model.Postcode" class="govuk-error-message"></span>*@
    <input class="govuk-input govuk-input--width-10" asp-for="@Model.Postcode" type="text" aria-describedby="@Model.PostcodeAriaDescribedBy"
             val-required-message="Enter a postcode"
            val-max-length="8"
           val-max-length-message="Enter a real postcode"
           val-regex="@postcoeRegEx"
           val-regex-message="Enter a real postcode" />
</div>

<script>
    (function ($) {
        $(function () {

        });
    })(jQuery);
</script>