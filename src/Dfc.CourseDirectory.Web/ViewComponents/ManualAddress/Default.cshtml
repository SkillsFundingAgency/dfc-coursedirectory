@model Dfc.CourseDirectory.Web.ViewComponents.ManualAddress.ManualAddressModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<input asp-for="Id" type="hidden" />.

<div class="govuk-form-group">
    <label class="govuk-label" asp-for="@Model.AddressLine1">
        @Model.AddressLine1LabelText
        <span class="govuk-visually-hidden">line 1 of 2</span>
    </label>
    @if (!string.IsNullOrWhiteSpace(Model.AddressLine1HintText))
    {
        <span class="govuk-hint">
            @Model.AddressLine1HintText
        </span>
    }
    <span asp-validation-for="@Model.AddressLine1" class="govuk-error-message"></span>
    <input class="govuk-input" asp-for="@Model.AddressLine1" type="text" aria-describedby="@Model.AddressLine1AriaDescribedBy">
</div>

<div class="govuk-form-group">
    <label class="govuk-label" asp-for="@Model.AddressLine2">
        @Model.AddressLine2LabelText
        <span class="govuk-visually-hidden">Address line 2 </span>
    </label>
    @if (!string.IsNullOrWhiteSpace(Model.AddressLine2HintText))
    {
        <span class="govuk-hint">
            @Model.AddressLine2HintText
        </span>
    }
    <span asp-validation-for="@Model.AddressLine2" class="govuk-error-message"></span>
    <input class="govuk-input" asp-for="@Model.AddressLine2" type="text" aria-describedby="@Model.AddressLine2AriaDescribedBy">
</div>

<div class="govuk-form-group">
    <label class="govuk-label" asp-for="@Model.TownOrCity">
        @Model.TownOrCityLabelText
    </label>
    <span asp-validation-for="@Model.TownOrCity" class="govuk-error-message"></span>
    <input class="govuk-input govuk-!-width-two-thirds" asp-for="@Model.TownOrCity" type="text" aria-describedby="@Model.TownOrCityAriaDescribedBy">
</div>

<div class="govuk-form-group">
    <label class="govuk-label" asp-for="@Model.County">
        @Model.CountyLabelText
    </label>
    @if (!string.IsNullOrWhiteSpace(Model.CountyHintText))
    {
        <span class="govuk-hint">
            @Model.CountyHintText
        </span>
    }
    <span asp-validation-for="@Model.County" class="govuk-error-message"></span>
    <input class="govuk-input govuk-!-width-two-thirds" asp-for="@Model.County" type="text" aria-describedby="@Model.CountyAriaDescribedBy">
</div>

<div class="govuk-form-group">
    <label class="govuk-label" asp-for="@Model.Postcode">
        @Model.PostcodeLabelText
    </label>
    @if (!string.IsNullOrWhiteSpace(Model.PostcodeHintText))
    {
        <span class="govuk-hint">
            @Model.PostcodeHintText
        </span>
    }
    <span asp-validation-for="@Model.Postcode" class="govuk-error-message"></span>
    <input class="govuk-input govuk-input--width-10" asp-for="@Model.Postcode" type="text" aria-describedby="@Model.PostcodeAriaDescribedBy">
</div>

<script>
    (function ($) {
        $(function () {
            var formGroupErrorClass = 'govuk-form-group--error';
            var elementErrorClass = "govuk-input--error";

            var $elementAddressLine1 = $("#@nameof(Model.AddressLine1)");
            var $validationMessageAddressLine1 = $elementAddressLine1.prev("[data-valmsg-for='@nameof(Model.AddressLine1)']");
            $validationMessageAddressLine1.css("margin-bottom", "0");
            var $formGroupAddressLine1 = $elementAddressLine1.closest('.govuk-form-group');

            var $form = $elementAddressLine1.closest("form");
            $form.addTriggersToJqueryValidate().triggerElementValidationsOnFormValidation();
            var validator = $form.validate();

            $elementAddressLine1.on("blur", function () {
                var result = validator.element($elementAddressLine1);

                if (result) {
                    $elementAddressLine1.removeClass(elementErrorClass);
                    $formGroupAddressLine1.removeClass(formGroupErrorClass);
                    $validationMessageAddressLine1.hide();
                    $validationMessageAddressLine1.css("margin-bottom", "0");
                } else {
                    $elementAddressLine1.addClass(elementErrorClass);
                    $formGroupAddressLine1.addClass(formGroupErrorClass);
                    $validationMessageAddressLine1.show();
                    $validationMessageAddressLine1.css("margin-bottom", "15px");
                }
            });

            $elementAddressLine1.elementValidation(function (element, result) {
                if (!$formGroupAddressLine1.hasClass(formGroupErrorClass)) {
                    $validationMessageAddressLine1.hide();
                }

                if (result) {
                    $elementAddressLine1.removeClass(elementErrorClass);
                    $formGroupAddressLine1.removeClass(formGroupErrorClass);
                    $validationMessageAddressLine1.css("margin-bottom", "0");
                }
            });

            var $elementAddressLine2 = $("#@nameof(Model.AddressLine2)");
            var $validationMessageAddressLine2 = $elementAddressLine2.prev("[data-valmsg-for='@nameof(Model.AddressLine2)']");
            $validationMessageAddressLine2.css("margin-bottom", "0");
            var $formGroupAddressLine2 = $elementAddressLine2.closest('.govuk-form-group');

            $elementAddressLine2.on("blur", function () {
                var result = validator.element($elementAddressLine2);

                if (result) {
                    $elementAddressLine2.removeClass(elementErrorClass);
                    $formGroupAddressLine2.removeClass(formGroupErrorClass);
                    $validationMessageAddressLine2.hide();
                    $validationMessageAddressLine2.css("margin-bottom", "0");
                } else {
                    $elementAddressLine2.addClass(elementErrorClass);
                    $formGroupAddressLine2.addClass(formGroupErrorClass);
                    $validationMessageAddressLine2.show();
                    $validationMessageAddressLine2.css("margin-bottom", "15px");
                }
            });

            $elementAddressLine2.elementValidation(function (element, result) {
                if (!$formGroupAddressLine2.hasClass(formGroupErrorClass)) {
                    $validationMessageAddressLine2.hide();
                }

                if (result) {
                    $elementAddressLine2.removeClass(elementErrorClass);
                    $formGroupAddressLine2.removeClass(formGroupErrorClass);
                    $validationMessageAddressLine2.css("margin-bottom", "0");
                }
            });

            var $elementTownOrCity = $("#@nameof(Model.TownOrCity)");
            var $validationMessageTownOrCity = $elementTownOrCity.prev("[data-valmsg-for='@nameof(Model.TownOrCity)']");
            $validationMessageTownOrCity.css("margin-bottom", "0");
            var $formGroupTownOrCity = $elementTownOrCity.closest('.govuk-form-group');

            $elementTownOrCity.on("blur", function () {
                var result = validator.element($elementTownOrCity);

                if (result) {
                    $elementTownOrCity.removeClass(elementErrorClass);
                    $formGroupTownOrCity.removeClass(formGroupErrorClass);
                    $validationMessageTownOrCity.hide();
                    $validationMessageTownOrCity.css("margin-bottom", "0");
                } else {
                    $elementTownOrCity.addClass(elementErrorClass);
                    $formGroupTownOrCity.addClass(formGroupErrorClass);
                    $validationMessageTownOrCity.show();
                    $validationMessageTownOrCity.css("margin-bottom", "15px");
                }
            });

            $elementTownOrCity.elementValidation(function (element, result) {
                if (!$formGroupTownOrCity.hasClass(formGroupErrorClass)) {
                    $validationMessageTownOrCity.hide();
                }

                if (result) {
                    $elementTownOrCity.removeClass(elementErrorClass);
                    $formGroupTownOrCity.removeClass(formGroupErrorClass);
                    $validationMessageTownOrCity.css("margin-bottom", "0");
                }
            });

            var $elementCounty = $("#@nameof(Model.County)");
            var $validationMessageCounty = $elementCounty.prev("[data-valmsg-for='@nameof(Model.County)']");
            $validationMessageCounty.css("margin-bottom", "0");
            var $formGroupCounty = $elementCounty.closest('.govuk-form-group');

            $elementCounty.on("blur", function () {
                var result = validator.element($elementCounty);

                if (result) {
                    $elementCounty.removeClass(elementErrorClass);
                    $formGroupCounty.removeClass(formGroupErrorClass);
                    $validationMessageCounty.hide();
                    $validationMessageCounty.css("margin-bottom", "0");
                } else {
                    $elementCounty.addClass(elementErrorClass);
                    $formGroupCounty.addClass(formGroupErrorClass);
                    $validationMessageCounty.show();
                    $validationMessageCounty.css("margin-bottom", "15px");
                }
            });

            $elementCounty.elementValidation(function (element, result) {
                if (!$formGroupCounty.hasClass(formGroupErrorClass)) {
                    $validationMessageCounty.hide();
                }

                if (result) {
                    $elementCounty.removeClass(elementErrorClass);
                    $formGroupCounty.removeClass(formGroupErrorClass);
                    $validationMessageCounty.css("margin-bottom", "0");
                }
            });

            var $elementPostcode = $("#@nameof(Model.Postcode)");
            var $validationMessagePostcode = $elementPostcode.prev("[data-valmsg-for='@nameof(Model.Postcode)']");
            $validationMessagePostcode.css("margin-bottom", "0");
            var $formGroupPostcode = $elementPostcode.closest('.govuk-form-group');

            $elementPostcode.on("blur", function () {
                var result = validator.element($elementPostcode);

                if (result) {
                    $elementPostcode.removeClass(elementErrorClass);
                    $formGroupPostcode.removeClass(formGroupErrorClass);
                    $validationMessagePostcode.hide();
                    $validationMessagePostcode.css("margin-bottom", "0");
                } else {
                    $elementPostcode.addClass(elementErrorClass);
                    $formGroupPostcode.addClass(formGroupErrorClass);
                    $validationMessagePostcode.show();
                    $validationMessagePostcode.css("margin-bottom", "15px");
                }
            });

            $elementPostcode.elementValidation(function (element, result) {
                if (!$formGroupPostcode.hasClass(formGroupErrorClass)) {
                    $validationMessagePostcode.hide();
                }

                if (result) {
                    $elementPostcode.removeClass(elementErrorClass);
                    $formGroupPostcode.removeClass(formGroupErrorClass);
                    $validationMessagePostcode.css("margin-bottom", "0");
                }
            });
        });
    })(jQuery);
</script>