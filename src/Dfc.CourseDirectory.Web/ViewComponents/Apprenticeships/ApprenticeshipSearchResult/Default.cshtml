@using Microsoft.AspNetCore.Authorization;
@using Dfc.CourseDirectory.Web.ViewComponents.Notification
@using Dfc.CourseDirectory.Models.Models.Apprenticeships
@using Dfc.CourseDirectory.Web.Helpers

@inject IAuthorizationService Authorization

@{
    var adminLogin = await Authorization.AuthorizeAsync(User, "Admin");
    var providerLogin = await Authorization.AuthorizeAsync(User, "Provider");
}

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model Dfc.CourseDirectory.Web.ViewComponents.Apprenticeships.ApprenticeshipSearchResult.ApprenticeshipsSearchResultModel;

@if (Model.Items == null)
{


}
else
{

    if (!Model.Items.Any())
    {
        <div class="govuk-grid-column-two-thirds">
            @await Component.InvokeAsync(nameof(Notification), new NotificationModel
       {
           NotificationTitle = "",
           NotificationMessage = "No apprenticeships found that match your search criteria",
           ClassType = "error-summary"
       })
        </div>
    }
    else
    {
        <div class="govuk-grid-row">

            <div class="govuk-grid-column-two-thirds  ">

                <div class="cd-apprenticeships-results hide govuk-body visible">
                    <div class="govuk-!-margin-bottom-4">
                        <span>Found <strong>@Model.Items.Count()</strong> results for <strong> @Model.SearchTerm</strong></span>
                    </div>

                    @foreach (var apprenticeship in Model.Items.OrderBy(x => x.ApprenticeshipTitle))
                    {
                        <div>
                            <div class="cd-apprenticeships-search-result__container">
                                <h3 class="govuk-heading-m" style="display:inline-flex">
                                    @apprenticeship.ApprenticeshipTitle
                                    @if (apprenticeship.ApprenticeshipType == ApprenticeshipType.FrameworkCode)
                                    {
                                        <span style="background-color: darkgray;color: white;padding: 5px;margin-left:10px">@apprenticeship.ApprenticeshipType.ToDescription()</span>

                                    }
                                </h3>

                                @{
                                    if (!string.IsNullOrEmpty(apprenticeship.NotionalEndLevel))
                                    {
                                        <p class="govuk-body">Level: <span class="govuk-!-font-weight-bold">@apprenticeship.NotionalEndLevel</span></p>
                                    }
                                    else
                                    {
                                        <p class="govuk-body"><span class="govuk-!-font-weight-bold">@apprenticeship.ProgTypeDesc</span></p>
                                    }

                                }
                                <p class="govuk-body">
                                    <a class="govuk-link" style="display:inline-flex"
                                       asp-controller="Apprenticeships"
                                       asp-action="ApprenticeShipDetails"
                                       asp-route-apprenticeshiptitle="@apprenticeship.ApprenticeshipTitle"
                                       asp-route-id="@apprenticeship.id"
                                       asp-route-standardcode="@apprenticeship.StandardCode"
                                       asp-route-frameworkcode="@apprenticeship.FrameworkCode"
                                       asp-route-ApprenticeshipType="@apprenticeship.ApprenticeshipType">Choose this apprenticeship</a>
                                </p>
                            </div>
                        </div>

                    }

                </div>
            </div>
        </div>
    }
}

<script>
    (function ($) {
        $(function () {


        });
    })(jQuery);
</script>
