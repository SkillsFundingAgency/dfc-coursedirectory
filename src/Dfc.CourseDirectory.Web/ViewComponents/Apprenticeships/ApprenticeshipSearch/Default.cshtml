@using Dfc.CourseDirectory.Web.ViewComponents.Apprenticeships.ApprenticeshipSearchResult;

@model Dfc.CourseDirectory.Web.ViewComponents.Apprenticeships.ApprenticeshipSearch.ApprenticeshipSearchModel;

<div class="lars-search cd-hero-search">

    <div id="ApprenticeshipsSearchResultContainer" class="">
        @await Component.InvokeAsync(nameof(ApprenticeshipSearchResult))
    </div>
</div>

<script>
    (function ($) {
        $(function () {

              var formGroupErrorClass = "govuk-form-group--error";
            var elementErrorClass = "govuk-input--error";

            var $searchForm = $("#ApprenticeshipSearchForm");


            var $apprenticeshipSearchTerm = $("#ApprenticeshipSearchTerm");
            var $buttonSearch = $("#searchApprenticeships");

            var $validationMessageSearchTerm = $apprenticeshipSearchTerm.prev("[data-valmsg-for='#ApprenticeshipSearchTerm']");
            $validationMessageSearchTerm.css("margin-bottom", "0");

            var $formGroupSearchTerm = $apprenticeshipSearchTerm.closest('.govuk-form-group');
            var $form = $apprenticeshipSearchTerm.closest("form");

            $form.addTriggersToJqueryValidate().triggerElementValidationsOnFormValidation();
            var validator = $form.validate();

            var debounce = function (cb, delay) {
                var inDebounce;
                return function () {
                    var context = this;
                    var args = arguments;
                    clearTimeout(inDebounce);
                    inDebounce = setTimeout(function () {
                        cb.apply(context, args);
                    },
                        delay);
                };
            };

         

            var isNullOrWhitespace = function (input) {
                if (typeof input === 'undefined' || input == null) return true;
                return input.replace(/\s/g, '').length < 3;
            }

            var replaceAll = function (search, find, replace) {
                return search.split(find).join(replace);
            };

            var makeRequestWithPayload = function (payload, success) {
                console.log(payload);
                var qs = $.param(payload);
                qs = replaceAll(qs, "%5B%5D", "");
                $.get("/Apprenticeships/Search?" + qs, success);
            };

            var removeSearchResults = function () {
                var $larsSearchResultContainer = $("#ApprenticeshipsSearchResultContainer");
                $larsSearchResultContainer.html("");
            };

            var replaceSearchResult = function (searchResults) {
                var $larsSearchResultContainer = $("#ApprenticeshipsSearchResultContainer");
                $larsSearchResultContainer.html("");
                $larsSearchResultContainer.html(searchResults);
            };



            var doSearch = function () {

                var runSearch = false;

                var result = validator.element($apprenticeshipSearchTerm);
                if (result) {
                    HideValidationErrorMessage();
                    runSearch = true;
                } else {
                    ShowValidationErrorMessage();
                }

                if (isNullOrWhitespace($apprenticeshipSearchTerm.val())) {
                    removeSearchResults();
                } else {

                    if (runSearch == true) {
                        makeRequestWithPayload({
                            SearchTerm: $apprenticeshipSearchTerm.val()

                        },
                            onSucess);
                    }
                }
            };


            var onSucess = function (data) {
                replaceSearchResult(data);

            };

                 //$apprenticeshipSearchTerm.on("keyup", debounce(doSearch, 400));
            $buttonSearch.on("click", doSearch);

            $(document).keypress(function (e) {
                if (e.which === 13) {
                    e.preventDefault();
                    $buttonSearch.trigger("click");
                    //ValidateAndSearchForProvider();
                }
            });

             function ShowValidationErrorMessage() {
                    $apprenticeshipSearchTerm.addClass(elementErrorClass);
                    $formGroupSearchTerm.addClass(formGroupErrorClass);
                    $searchForm.addClass("govuk-form-group, govuk-form-group--error");
                    $validationMessageSearchTerm.show();
                 $validationMessageSearchTerm.css("margin-bottom", "15px");
                  var $larsSearchResultContainer = $("#ApprenticeshipsSearchResultContainer");
                $larsSearchResultContainer.html("");
            }
            function HideValidationErrorMessage() {
                    $apprenticeshipSearchTerm.removeClass(elementErrorClass);
                    $formGroupSearchTerm.removeClass(formGroupErrorClass);
                    $searchForm.removeClass("govuk-form-group, govuk-form-group--error");
                    $validationMessageSearchTerm.hide();
                    $validationMessageSearchTerm.css("margin-bottom", "0");
            }
        });
    })(jQuery);
</script>