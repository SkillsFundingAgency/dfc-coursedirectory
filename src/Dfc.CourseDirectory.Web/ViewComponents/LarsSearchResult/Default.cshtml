@using Dfc.CourseDirectory.Web.ViewComponents.Extensions
@using Dfc.CourseDirectory.Web.ViewComponents.Pagination;

@model Dfc.CourseDirectory.Web.ViewComponents.LarsSearchResult.LarsSearchResultModel;

<div class="govuk-grid-row">

    @if (Model.HasErrors)
    {
        <div class="govuk-grid-column-full">
            <div class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary">
                <h2 class="govuk-error-summary__title" id="error-summary-title">
                    Sorry, there was a problem.
                </h2>
                <div class="govuk-error-summary__body">
                    <ul class="govuk-list govuk-error-summary__list">
                        @foreach (var error in Model.Errors)
                        {
                            <li>
                                @error
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
    else if (Model.Items.Count() > 0)
    {
        <div class="govuk-grid-column-one-quarter">

            @if (Model.Filters != null)
            {
                if (Model.HasSelectedFilters)
                {
                    <div class="govuk-form-group">
                        <a class="govuk-link" id="ClearAllFilters" href="">Clear all filters</a>
                    </div>
                }

                foreach (var filter in Model.Filters)
                {
                    <div class="govuk-form-group govuk-!-font-size-14">
                        <fieldset class="govuk-fieldset" aria-describedby="waste-hint">
                            <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                                <h2 class="govuk-fieldset__heading">
                                    @filter.Title
                                </h2>
                            </legend>
                            <span id="waste-hint" class="govuk-hint govuk-!-font-size-14">
                                Select all that apply.
                            </span>
                            <div class="govuk-checkboxes">

                                @foreach (var item in filter.Items)
                                {
                                    <div class="govuk-checkboxes__item">
                                        <input class="govuk-checkboxes__input" id="@item.Id" name="@item.Name" type="checkbox" value="@item.Value" @item.IsSelected.ThenCheck()>
                                        <label class="govuk-label govuk-checkboxes__label govuk-!-font-size-14" for="@item.Id">
                                            @item.Text (@item.Count)
                                        </label>
                                    </div>
                                }
                            </div>
                        </fieldset>
                    </div>
                }
            }
        </div>

        <div class="govuk-grid-column-three-quarters">
            @await Component.InvokeAsync(nameof(Pagination),
            new
            {
                url = Model.Url,
                pageParamName = Model.PageParamName,
                totalNoOfItems = Model.TotalCount,
                itemsPerPage = Model.ItemsPerPage,
                noOfPagesToDisplay = 10,
                isSliding = true
            })
            <div class="govuk-table govuk-!-font-size-14">
                <div class="govuk-table__caption govuk-heading-s govuk-!-font-weight-regular">
                    Found <span class="govuk-!-font-weight-bold">@Model.TotalCount</span> results for <span class="govuk-!-font-weight-bold">@Model.SearchTerm</span>
                </div>

                @foreach (var item in Model.Items)
                {
                    <div class="cd-lars-search-result__container">
                        <h3 class="govuk-heading-m">@item.LearnAimRefTitle</h3>
                        <p class="govuk-body">LARS/QAN:<span class="govuk-!-font-weight-bold">@item.LearnAimRef</span></p>
                        <p class="govuk-body">Level: <span class="govuk-!-font-weight-bold">@item.NotionalNVQLevelv2</span></p>
                        <p class="govuk-body"><span class="govuk-!-font-weight-bold">@item.AwardOrgName (@item.AwardOrgCode)</span></p>
                        <p class="govuk-body"><a class="govuk-link" href="#">Add this qualification</a></p>
                    </div>
                }
            </div>
            @await Component.InvokeAsync(nameof(Pagination),
            new
            {
                url = Model.Url,
                pageParamName = Model.PageParamName,
                totalNoOfItems = Model.TotalCount,
                itemsPerPage = Model.ItemsPerPage,
                noOfPagesToDisplay = 10,
                isSliding = true
            })
        </div>
    }
    else if (!string.IsNullOrWhiteSpace(Model.SearchTerm) && !Model.Items.Any())
    {
        <div class="govuk-grid-column-full">
            <div class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary">

                <h2 class="govuk-error-summary__title" id="error-summary-title">
                    No records found
                </h2>
            </div>
        </div>
    }
</div>