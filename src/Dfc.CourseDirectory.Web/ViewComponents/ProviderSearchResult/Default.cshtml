@using Microsoft.AspNetCore.Http
@using Dfc.CourseDirectory.Models.Models.Providers;
@using Dfc.CourseDirectory.Web.ViewComponents.Notification
@model Dfc.CourseDirectory.Web.ViewComponents.ProviderSearchResult.ProviderSearchResultModel;
@inject IHttpContextAccessor HttpContextAccessor
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var provSearch = HttpContextAccessor.HttpContext.Session.GetInt32("ProviderSearch");
}

@if (Model.Items.Any() && Model.Items.FirstOrDefault() != null)
{
    <div class="govuk-width-container govuk-!-margin-top-4">
        <span class="govuk-caption-xl"> Course Provider</span>
        @if (provSearch == 0)
        {
            <h1 class="govuk-heading-xl">Provider Details</h1>
        }

        @foreach (var provider in Model.Items)
        {
            if (provSearch == 1)
            {
                <h1 class="govuk-heading-xl">@provider.ProviderName</h1>
            }
            else
            {
                if (provider.Status.Equals(Status.Onboarded))
                {
                    @await Component.InvokeAsync(nameof(Notification), new NotificationModel
               {

                   NotificationTitle = "",
                   NotificationMessage = "A Provider record for the entered UKPRN has already been on - boarded within the Course Directory.",
                   ClassType = "success-summary"
                    });

                }
                else if (!(provider.ProviderStatus.Equals("Active", StringComparison.InvariantCultureIgnoreCase) || provider.ProviderStatus.Equals("Verified", StringComparison.InvariantCultureIgnoreCase)))
                {
                    @await Component.InvokeAsync(nameof(Notification), new NotificationModel
                    {

                        NotificationTitle = "",
                        NotificationMessage = "UKPRN has been deactivated and cannot be added to the Course Directory.",
                        ClassType = "warning-summary"
                    });

                }
                else if (!provider.Status.Equals(Status.Onboarded))
                {
                    @await Component.InvokeAsync(nameof(Notification), new NotificationModel
                    {

                        NotificationTitle = "",
                        NotificationMessage = "This Provider record for the entered UKPRN has not been on-boarded to the Course Directory.",
                        ClassType = "info-summary"
                    });
                }
            }






            <input type="hidden" value="@provider.id" id="ProviderId" />
            <div id="OnBoardingAjaxCallResult" style="display: none;"></div>

            <table class="govuk-table">
                <tbody class="govuk-table__body">
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="row">Course Directory Status</th>
                        <td class="govuk-table__cell"><span id="RegisteredStatusText">@provider.Status</span></td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="row">UKPRN Status</th>
                        <td class="govuk-table__cell">@provider.ProviderStatus</td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="row">UKPRN</th>
                        <td class="govuk-table__cell">@provider.UnitedKingdomProviderReferenceNumber</td>
                    </tr>
                    @if (provSearch == 0)
                    {
                        <tr class="govuk-table__row">
                            <th class="govuk-table__header" scope="row">Name</th>
                            <td class="govuk-table__cell">@provider.ProviderName</td>
                        </tr>
                    }
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="row">Address</th>
                        <td class="govuk-table__cell"><span>@Model.AddressTypeL</span></td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="row">Web</th>
                        <td class="govuk-table__cell">@Model.WebTypeL</td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="row">Email</th>
                        <td class="govuk-table__cell">@Model.EmailTypeL</td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="row">Telephone</th>
                        <td class="govuk-table__cell">@Model.TelephoneTypeL</td>
                    </tr>
                </tbody>
            </table>
            if (
                    (
                        provider.ProviderStatus.Equals("Active", StringComparison.InvariantCultureIgnoreCase) ||
                        provider.ProviderStatus.Equals("Verified", StringComparison.InvariantCultureIgnoreCase)
                    )
                        && !provider.Status.Equals(Status.Onboarded)
                        && provSearch == 0
                )
            {
                <a id="btnOnboardProvider" onclick="OnBoardProvider(); return false;" href="#" class="govuk-button"><span id="btnOnboardProviderText">Add Provider</span></a>
            }
            else if (provSearch == 1 && provider.Status.Equals(Status.Onboarded))
            {
                @*<a id="btnShowCourses" href="/Courses" class="govuk-button"><span id="btnShowCoursesText">View Courses</span></a>*@
                <a id="btnQualificationList" asp-controller="Provider" asp-action="Courses" class="govuk-button"><span id="btnQualificationListText">View Courses</span></a>
            }
        }
    </div>
}
else
{
    <div class="govuk-width-container" style="margin-top: 30px;">
        @if (Model.Errors.Any())
        {
            <div class="failure-container">
                @foreach (var error in Model.Errors)
                {
                    <h1 class="govuk-heading-m">@error</h1><br />
                }
            </div>
        }
        else
        {
            if (Model.ServiceWasCalled)
            {
                <div class="no-results">
                    <h2 class="govuk-heading-l">
                        No results found
                        <span class="govuk-caption-l">please check that the information you have entered is correct.</span>
                    </h2>
                </div>
            }
        }
    </div>
}

<script type="text/javascript">

    function OnBoardProvider() {

        //DFC-7249 - Hide any Notification controls
        $('.cd-info-summary').hide()
        $('.cd-warning-summary').hide()
        $('.cd-success-summary').hide()

        $.ajax({
            url: '/ProviderSearch/OnBoardProvider',
            type: "POST",
            dataType: "json",
            data: JSON.stringify({
                ProviderId: $('#ProviderId').val()
            }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                $('#OnBoardingAjaxCallResult').html("<h1 class=\"govuk-heading-m\">" + data.resultText + "</h1>");
                $('#OnBoardingAjaxCallResult').show();

                if (data.success == true) {
                    $('#RegisteredStatusText').html("<b>Onboarded</b>");
                    $('#RegisteredStatusText').css('color', '#28a197');
                    $('#OnBoardingAjaxCallResult').addClass("success-container");
                }
                else {
                    $('#OnBoardingAjaxCallResult').addClass("failure-container");
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                $('#OnBoardingAjaxCallResult').html("<h1 class=\"govuk-heading-m\">" + xhr + ", " + ajaxOptions + ", " + thrownError + "</h1>");
                $('#OnBoardingAjaxCallResult').addClass("failure-container");
                $('#OnBoardingAjaxCallResult').show();
            }
        });

        $('#btnOnboardProvider').hide();

        return false;
    }
</script>
