@model Dfc.CourseDirectory.Web.ViewComponents.PostcodeLookup.PostcodeLookupModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{ var regex = @"^([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9][A-Za-z]?))))\s?[0-9][A-Za-z]{2})+$"; }

@Html.HiddenFor(x => x.VenueName)
@Html.HiddenFor(x => x.Id)
<div class="postcode-lookup__component">
    @if (Model.HasItems)
    {
        <div class="govuk-form-group">
            <label class="govuk-label">
                @Model.PostcodeLabelText
            </label>
            <label class="govuk-body govuk-!-font-size-24 govuk-!-font-weight-bold">
                @Model.Postcode
            </label>
            <a href="#" class="govuk-link" id="Change">Change</a>
        </div>
        <div class="govuk-form-group">
            <select asp-items="@Model.Items" asp-for="@Model.PostcodeId" class="govuk-select govuk-!-width-one-half" val-required-message="Select an address">
                <option value="">@Model.NoneSelectedText</option>
            </select>
        </div>

        <div class="govuk-form-group">
            <button class="govuk-button" type="submit" id="venueAddressConfirmationSelection">
                Continue
            </button>
        </div>

    }
    else
    {
        <div class="govuk-form-group">
            <label class="govuk-label" asp-for="@Model.Postcode">
                @Model.PostcodeLabelText
            </label>
            @if (!string.IsNullOrWhiteSpace(Model.PostcodeHintText))
            {
                <span class="govuk-hint">
                    @Model.PostcodeHintText
                </span>
            }

            @if (Model.Searched && Model.Items == null)
            {
                <span id="InvalidPostCode" class="govuk-error-message"
                      val-message="Enter a real postcode">Enter a real postcode</span>
            }

            <input class="govuk-input govuk-input--width-10" asp-for="@Model.Postcode" type="text" autofocus aria-describedby="@Model.PostcodeAriaDescribedBy"
                   val-required-message="Enter a postcode"
                   val-max-length="8"
                   val-max-length-message="Enter a real postcode"
                   val-regex="@regex"
                   val-regex-message="Enter a real postcode" />

        </div>
        <div class="govuk-form-group">
            <button type="button" class="govuk-button" id="findAddress">
                @Model.ButtonText
            </button>
        </div>

    }
</div>
