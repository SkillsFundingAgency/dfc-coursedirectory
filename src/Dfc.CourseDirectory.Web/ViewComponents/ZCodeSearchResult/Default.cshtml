@using Dfc.CourseDirectory.Web.ViewComponents.Extensions
@using Dfc.CourseDirectory.Web.ViewComponents.Pagination;
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity
@using Dfc.CourseDirectory.Web.Areas.Identity.Data;
@using Microsoft.AspNetCore.Authorization;


@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@model Dfc.CourseDirectory.Web.ViewComponents.ZCodeSearchResult.ZCodeSearchResultModel;


@if (Model.Items != null && Model.Items.Count() > 0)
{

    @await Component.InvokeAsync(nameof(Pagination),
                    new
                    {
                        url = Model.Url,
                        pageParamName = Model.PageParamName,
                        totalNoOfItems = Model.TotalCount,
                        itemsPerPage = Model.ItemsPerPage,
                        noOfPagesToDisplay = 10,
                        isSliding = true
                    })
    @foreach (var item in Model.Items)
    {
        <div class="provision-container">
            <form asp-controller="AddCourse" asp-action="AddCourse" asp-route-learnAimRef="@item?.LearnAimRef" asp-route-notionalNVQLevelv2="@item?.NotionalNVQLevelv2" asp-route-awardOrgCode="@item?.AwardOrgCode" asp-route-learnAimRefTitle="@item?.LearnAimRefTitle" asp-route-learnAimRefTypeDesc="@item?.LearnAimRefTypeDesc">
                <div class=" govuk-!-margin-top-4 ">
                    <div class="">
                        <h2 class="provision-title govuk-heading-l">
                            @item?.LearnAimRefTitle
                        </h2>
                        <span>LARS/QAN :</span> <span>@item?.LearnAimRef</span><br />
                        <span>Level :</span> <span>@item?.NotionalNVQLevelv2</span><br />


                        @Html.ActionLink("Add this provison", "AddCourse", "AddCourse", new { @item?.LearnAimRef, @item?.NotionalNVQLevelv2, @item?.AwardOrgCode, @item?.LearnAimRefTitle, @item?.LearnAimRefTypeDesc }, new { @class = "govuk-link" })

                    </div>
                    <br />

                </div>



            </form>
        </div>
        <br />
    }
    @await Component.InvokeAsync(nameof(Pagination),
                    new
                    {
                        url = Model.Url,
                        pageParamName = Model.PageParamName,
                        totalNoOfItems = Model.TotalCount,
                        itemsPerPage = Model.ItemsPerPage,
                        noOfPagesToDisplay = 10,
                        isSliding = true
                    })
}
else
{
    <h1>No Records Found</h1>
}
